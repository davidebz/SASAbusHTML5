/*********************************************************************************
 *                                                                               *
 * WARNING: File automatically generated by DMXmlJson. DON'T CHANGE IT manually! *
 *                                                                               *
 *********************************************************************************/

package bz.davide.dmweb.shared.i18n;


public class SASAbusWidgetMarshaller_Helper extends it.bz.tis.sasabus.html5.shared.ui.SASAbusWidgetMarshaller_Helper
{
   protected SASAbusWidgetMarshaller_Helper()
   {
      this.putClassMarshaller("bz.davide.dmweb.shared.i18n.I18NData", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            internalMarschall(obj, "bz.davide.dmweb.shared.i18n.I18N", "N/A",structure, identities, seq, true);
            Object value;
            // language
            value = ((bz.davide.dmweb.shared.i18n.I18NData)obj).language;
            if (value == null)
               structure.property("language").nullValue();
            else
            {
                    structure.property("language").string((String)value);                          
            }
            // map
            value = ((bz.davide.dmweb.shared.i18n.I18NData)obj).map;
            if (value == null)
               structure.property("map").nullValue();
            else
            {
               // Hashmap
               java.util.HashMap hashMap = (java.util.HashMap)value;                        
               bz.davide.dmxmljson.marshalling.Array array = structure.property("map").array(hashMap.size());        
               java.util.ArrayList keySelList = new java.util.ArrayList(hashMap.keySet());
               java.util.Collections.sort(keySelList);
               for (Object key: keySelList) {
                  bz.davide.dmxmljson.marshalling.Array item = array.item().array(2); 
                  item.item().string((String)key);
                  item.item().string((String)hashMap.get(key));
               }
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("bz.davide.dmweb.shared.i18n.I18N", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            if (!superClass)
               structure.close();
         }
      });

   }
}
