/*********************************************************************************
 *                                                                               *
 * WARNING: File automatically generated by DMXmlJson. DON'T CHANGE IT manually! *
 *                                                                               *
 *********************************************************************************/

package it.bz.tis.sasabus.backend.shared.travelplanner;


public class SASAbusBackendMarshaller_Helper extends it.bz.tis.sasabus.backend.shared.SASAbusBackendMarshaller_Helper
{
   protected SASAbusBackendMarshaller_Helper()
   {
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.travelplanner.ReqC", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // ConReq
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.ReqC)obj).ConReq;
            if (value == null)
               structure.property("ConReq").nullValue();
            else
            {
               it.bz.tis.sasabus.backend.shared.travelplanner.ConReq[] rawarray = (it.bz.tis.sasabus.backend.shared.travelplanner.ConReq[])value;                        
               bz.davide.dmxmljson.marshalling.Array array = structure.property("ConReq").array(rawarray.length);        
               for (Object o: rawarray) {                                    
                  if (o == null)                                              
                     array.item().nullValue();                                
                     internalMarschall(o, o.getClass().getName(), "it.bz.tis.sasabus.backend.shared.travelplanner.ConReq", array.item().structure(), identities, seq, false);
               }                                                              
            }
            // ConScrReq
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.ReqC)obj).ConScrReq;
            if (value == null)
               structure.property("ConScrReq").nullValue();
            else
            {
               it.bz.tis.sasabus.backend.shared.travelplanner.ConScrReq[] rawarray = (it.bz.tis.sasabus.backend.shared.travelplanner.ConScrReq[])value;                        
               bz.davide.dmxmljson.marshalling.Array array = structure.property("ConScrReq").array(rawarray.length);        
               for (Object o: rawarray) {                                    
                  if (o == null)                                              
                     array.item().nullValue();                                
                     internalMarschall(o, o.getClass().getName(), "it.bz.tis.sasabus.backend.shared.travelplanner.ConScrReq", array.item().structure(), identities, seq, false);
               }                                                              
            }
            // LocValReq
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.ReqC)obj).LocValReq;
            if (value == null)
               structure.property("LocValReq").nullValue();
            else
            {
               it.bz.tis.sasabus.backend.shared.travelplanner.LocValReq[] rawarray = (it.bz.tis.sasabus.backend.shared.travelplanner.LocValReq[])value;                        
               bz.davide.dmxmljson.marshalling.Array array = structure.property("LocValReq").array(rawarray.length);        
               for (Object o: rawarray) {                                    
                  if (o == null)                                              
                     array.item().nullValue();                                
                     internalMarschall(o, o.getClass().getName(), "it.bz.tis.sasabus.backend.shared.travelplanner.LocValReq", array.item().structure(), identities, seq, false);
               }                                                              
            }
            // accessId
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.ReqC)obj).accessId;
            if (value == null)
               structure.property("accessId").nullValue();
            else
            {
                    structure.property("accessId").string((String)value);                          
            }
            // lang
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.ReqC)obj).lang;
            if (value == null)
               structure.property("lang").nullValue();
            else
            {
                    structure.property("lang").string((String)value);                          
            }
            // prod
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.ReqC)obj).prod;
            if (value == null)
               structure.property("prod").nullValue();
            else
            {
                    structure.property("prod").string((String)value);                          
            }
            // ver
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.ReqC)obj).ver;
            if (value == null)
               structure.property("ver").nullValue();
            else
            {
                    structure.property("ver").string((String)value);                          
            }
            // xmlns__xsi
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.ReqC)obj).xmlns__xsi;
            if (value == null)
               structure.property("xmlns__xsi").nullValue();
            else
            {
                    structure.property("xmlns__xsi").string((String)value);                          
            }
            // xsi__noNamespaceSchemaLocation
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.ReqC)obj).xsi__noNamespaceSchemaLocation;
            if (value == null)
               structure.property("xsi__noNamespaceSchemaLocation").nullValue();
            else
            {
                    structure.property("xsi__noNamespaceSchemaLocation").string((String)value);                          
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.travelplanner.ResC", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // ConRes
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.ResC)obj).ConRes;
            if (value == null)
               structure.property("ConRes").nullValue();
            else
            {
               it.bz.tis.sasabus.backend.shared.travelplanner.ConRes[] rawarray = (it.bz.tis.sasabus.backend.shared.travelplanner.ConRes[])value;                        
               bz.davide.dmxmljson.marshalling.Array array = structure.property("ConRes").array(rawarray.length);        
               for (Object o: rawarray) {                                    
                  if (o == null)                                              
                     array.item().nullValue();                                
                     internalMarschall(o, o.getClass().getName(), "it.bz.tis.sasabus.backend.shared.travelplanner.ConRes", array.item().structure(), identities, seq, false);
               }                                                              
            }
            // LocValRes
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.ResC)obj).LocValRes;
            if (value == null)
               structure.property("LocValRes").nullValue();
            else
            {
               it.bz.tis.sasabus.backend.shared.travelplanner.LocValRes[] rawarray = (it.bz.tis.sasabus.backend.shared.travelplanner.LocValRes[])value;                        
               bz.davide.dmxmljson.marshalling.Array array = structure.property("LocValRes").array(rawarray.length);        
               for (Object o: rawarray) {                                    
                  if (o == null)                                              
                     array.item().nullValue();                                
                     internalMarschall(o, o.getClass().getName(), "it.bz.tis.sasabus.backend.shared.travelplanner.LocValRes", array.item().structure(), identities, seq, false);
               }                                                              
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.travelplanner.ConReq", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // Dest
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.ConReq)obj).Dest;
            if (value == null)
               structure.property("Dest").nullValue();
            else
            {
                     internalMarschall(value, value.getClass().getName(),"it.bz.tis.sasabus.backend.shared.travelplanner.ConReqStartDest", structure.property("Dest").structure(), identities, seq, false);
            }
            // RFlags
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.ConReq)obj).RFlags;
            if (value == null)
               structure.property("RFlags").nullValue();
            else
            {
                     internalMarschall(value, value.getClass().getName(),"it.bz.tis.sasabus.backend.shared.travelplanner.RFlags", structure.property("RFlags").structure(), identities, seq, false);
            }
            // ReqT
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.ConReq)obj).ReqT;
            if (value == null)
               structure.property("ReqT").nullValue();
            else
            {
                     internalMarschall(value, value.getClass().getName(),"it.bz.tis.sasabus.backend.shared.travelplanner.ReqT", structure.property("ReqT").structure(), identities, seq, false);
            }
            // Start
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.ConReq)obj).Start;
            if (value == null)
               structure.property("Start").nullValue();
            else
            {
                     internalMarschall(value, value.getClass().getName(),"it.bz.tis.sasabus.backend.shared.travelplanner.ConReqStartDest", structure.property("Start").structure(), identities, seq, false);
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.travelplanner.ConScrReq", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // ConResCtxt
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.ConScrReq)obj).ConResCtxt;
            if (value == null)
               structure.property("ConResCtxt").nullValue();
            else
            {
               java.lang.String[] rawarray = (java.lang.String[])value;                        
               bz.davide.dmxmljson.marshalling.Array array = structure.property("ConResCtxt").array(rawarray.length);        
               for (Object o: rawarray) {                                    
                  if (o == null)                                              
                     array.item().nullValue();                                
                  else   array.item().string((String)o);                          
               }                                                              
            }
            // nrCons
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.ConScrReq)obj).nrCons;
            if (value == null)
               structure.property("nrCons").nullValue();
            else
            {
                    structure.property("nrCons").integer((Integer)value);                          
            }
            // srcDir
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.ConScrReq)obj).srcDir;
            if (value == null)
               structure.property("srcDir").nullValue();
            else
            {
                    structure.property("srcDir").string((String)value);                          
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.travelplanner.LocValReq", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // ReqLoc
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.LocValReq)obj).ReqLoc;
            if (value == null)
               structure.property("ReqLoc").nullValue();
            else
            {
                     internalMarschall(value, value.getClass().getName(),"it.bz.tis.sasabus.backend.shared.travelplanner.ReqLoc", structure.property("ReqLoc").structure(), identities, seq, false);
            }
            // id
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.LocValReq)obj).id;
            if (value == null)
               structure.property("id").nullValue();
            else
            {
                    structure.property("id").string((String)value);                          
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.travelplanner.ConRes", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // ConResCtxt
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.ConRes)obj).ConResCtxt;
            if (value == null)
               structure.property("ConResCtxt").nullValue();
            else
            {
               java.lang.String[] rawarray = (java.lang.String[])value;                        
               bz.davide.dmxmljson.marshalling.Array array = structure.property("ConResCtxt").array(rawarray.length);        
               for (Object o: rawarray) {                                    
                  if (o == null)                                              
                     array.item().nullValue();                                
                  else   array.item().string((String)o);                          
               }                                                              
            }
            // ConnectionList
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.ConRes)obj).ConnectionList;
            if (value == null)
               structure.property("ConnectionList").nullValue();
            else
            {
                     internalMarschall(value, value.getClass().getName(),"it.bz.tis.sasabus.backend.shared.travelplanner.ConnectionList", structure.property("ConnectionList").structure(), identities, seq, false);
            }
            // dir
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.ConRes)obj).dir;
            if (value == null)
               structure.property("dir").nullValue();
            else
            {
                    structure.property("dir").string((String)value);                          
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.travelplanner.LocValRes", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // Station
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.LocValRes)obj).Station;
            if (value == null)
               structure.property("Station").nullValue();
            else
            {
               it.bz.tis.sasabus.backend.shared.travelplanner.Station[] rawarray = (it.bz.tis.sasabus.backend.shared.travelplanner.Station[])value;                        
               bz.davide.dmxmljson.marshalling.Array array = structure.property("Station").array(rawarray.length);        
               for (Object o: rawarray) {                                    
                  if (o == null)                                              
                     array.item().nullValue();                                
                     internalMarschall(o, o.getClass().getName(), "it.bz.tis.sasabus.backend.shared.travelplanner.Station", array.item().structure(), identities, seq, false);
               }                                                              
            }
            // id
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.LocValRes)obj).id;
            if (value == null)
               structure.property("id").nullValue();
            else
            {
                    structure.property("id").string((String)value);                          
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.travelplanner.ConReqStartDest", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // Prod
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.ConReqStartDest)obj).Prod;
            if (value == null)
               structure.property("Prod").nullValue();
            else
            {
               it.bz.tis.sasabus.backend.shared.travelplanner.Prod[] rawarray = (it.bz.tis.sasabus.backend.shared.travelplanner.Prod[])value;                        
               bz.davide.dmxmljson.marshalling.Array array = structure.property("Prod").array(rawarray.length);        
               for (Object o: rawarray) {                                    
                  if (o == null)                                              
                     array.item().nullValue();                                
                     internalMarschall(o, o.getClass().getName(), "it.bz.tis.sasabus.backend.shared.travelplanner.Prod", array.item().structure(), identities, seq, false);
               }                                                              
            }
            // Station
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.ConReqStartDest)obj).Station;
            if (value == null)
               structure.property("Station").nullValue();
            else
            {
                     internalMarschall(value, value.getClass().getName(),"it.bz.tis.sasabus.backend.shared.travelplanner.Station", structure.property("Station").structure(), identities, seq, false);
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.travelplanner.RFlags", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // b
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.RFlags)obj).b;
            if (value == null)
               structure.property("b").nullValue();
            else
            {
                    structure.property("b").integer((Integer)value);                          
            }
            // chExtension
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.RFlags)obj).chExtension;
            if (value == null)
               structure.property("chExtension").nullValue();
            else
            {
                    structure.property("chExtension").integer((Integer)value);                          
            }
            // f
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.RFlags)obj).f;
            if (value == null)
               structure.property("f").nullValue();
            else
            {
                    structure.property("f").integer((Integer)value);                          
            }
            // sMode
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.RFlags)obj).sMode;
            if (value == null)
               structure.property("sMode").nullValue();
            else
            {
                    structure.property("sMode").string((String)value);                          
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.travelplanner.ReqT", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // a
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.ReqT)obj).a;
            if (value == null)
               structure.property("a").nullValue();
            else
            {
                    structure.property("a").integer((Integer)value);                          
            }
            // date
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.ReqT)obj).date;
            if (value == null)
               structure.property("date").nullValue();
            else
            {
                    structure.property("date").string((String)value);                          
            }
            // time
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.ReqT)obj).time;
            if (value == null)
               structure.property("time").nullValue();
            else
            {
                    structure.property("time").string((String)value);                          
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.travelplanner.ReqLoc", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // match
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.ReqLoc)obj).match;
            if (value == null)
               structure.property("match").nullValue();
            else
            {
                    structure.property("match").string((String)value);                          
            }
            // type
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.ReqLoc)obj).type;
            if (value == null)
               structure.property("type").nullValue();
            else
            {
                    structure.property("type").string((String)value);                          
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.travelplanner.ConnectionList", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // Connection
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.ConnectionList)obj).Connection;
            if (value == null)
               structure.property("Connection").nullValue();
            else
            {
               it.bz.tis.sasabus.backend.shared.travelplanner.Connection[] rawarray = (it.bz.tis.sasabus.backend.shared.travelplanner.Connection[])value;                        
               bz.davide.dmxmljson.marshalling.Array array = structure.property("Connection").array(rawarray.length);        
               for (Object o: rawarray) {                                    
                  if (o == null)                                              
                     array.item().nullValue();                                
                     internalMarschall(o, o.getClass().getName(), "it.bz.tis.sasabus.backend.shared.travelplanner.Connection", array.item().structure(), identities, seq, false);
               }                                                              
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.travelplanner.Station", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // externalId
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.Station)obj).externalId;
            if (value == null)
               structure.property("externalId").nullValue();
            else
            {
                    structure.property("externalId").string((String)value);                          
            }
            // externalStationNr
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.Station)obj).externalStationNr;
            if (value == null)
               structure.property("externalStationNr").nullValue();
            else
            {
                    structure.property("externalStationNr").string((String)value);                          
            }
            // name
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.Station)obj).name;
            if (value == null)
               structure.property("name").nullValue();
            else
            {
                    structure.property("name").string((String)value);                          
            }
            // type
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.Station)obj).type;
            if (value == null)
               structure.property("type").nullValue();
            else
            {
                    structure.property("type").string((String)value);                          
            }
            // x
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.Station)obj).x;
            if (value == null)
               structure.property("x").nullValue();
            else
            {
                    structure.property("x").string((String)value);                          
            }
            // y
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.Station)obj).y;
            if (value == null)
               structure.property("y").nullValue();
            else
            {
                    structure.property("y").string((String)value);                          
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.travelplanner.Prod", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // bike
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.Prod)obj).bike;
            if (value == null)
               structure.property("bike").nullValue();
            else
            {
                    structure.property("bike").integer((Integer)value);                          
            }
            // couchette
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.Prod)obj).couchette;
            if (value == null)
               structure.property("couchette").nullValue();
            else
            {
                    structure.property("couchette").integer((Integer)value);                          
            }
            // direct
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.Prod)obj).direct;
            if (value == null)
               structure.property("direct").nullValue();
            else
            {
                    structure.property("direct").integer((Integer)value);                          
            }
            // sleeper
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.Prod)obj).sleeper;
            if (value == null)
               structure.property("sleeper").nullValue();
            else
            {
                    structure.property("sleeper").integer((Integer)value);                          
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.travelplanner.Connection", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // ConSectionList
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.Connection)obj).ConSectionList;
            if (value == null)
               structure.property("ConSectionList").nullValue();
            else
            {
                     internalMarschall(value, value.getClass().getName(),"it.bz.tis.sasabus.backend.shared.travelplanner.ConSectionList", structure.property("ConSectionList").structure(), identities, seq, false);
            }
            // Overview
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.Connection)obj).Overview;
            if (value == null)
               structure.property("Overview").nullValue();
            else
            {
                     internalMarschall(value, value.getClass().getName(),"it.bz.tis.sasabus.backend.shared.travelplanner.Overview", structure.property("Overview").structure(), identities, seq, false);
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.travelplanner.ConSectionList", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // ConSection
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.ConSectionList)obj).ConSection;
            if (value == null)
               structure.property("ConSection").nullValue();
            else
            {
               it.bz.tis.sasabus.backend.shared.travelplanner.ConSection[] rawarray = (it.bz.tis.sasabus.backend.shared.travelplanner.ConSection[])value;                        
               bz.davide.dmxmljson.marshalling.Array array = structure.property("ConSection").array(rawarray.length);        
               for (Object o: rawarray) {                                    
                  if (o == null)                                              
                     array.item().nullValue();                                
                     internalMarschall(o, o.getClass().getName(), "it.bz.tis.sasabus.backend.shared.travelplanner.ConSection", array.item().structure(), identities, seq, false);
               }                                                              
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.travelplanner.Overview", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // Arrival
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.Overview)obj).Arrival;
            if (value == null)
               structure.property("Arrival").nullValue();
            else
            {
                     internalMarschall(value, value.getClass().getName(),"it.bz.tis.sasabus.backend.shared.travelplanner.Arrival", structure.property("Arrival").structure(), identities, seq, false);
            }
            // Departure
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.Overview)obj).Departure;
            if (value == null)
               structure.property("Departure").nullValue();
            else
            {
                     internalMarschall(value, value.getClass().getName(),"it.bz.tis.sasabus.backend.shared.travelplanner.Departure", structure.property("Departure").structure(), identities, seq, false);
            }
            // Duration
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.Overview)obj).Duration;
            if (value == null)
               structure.property("Duration").nullValue();
            else
            {
                     internalMarschall(value, value.getClass().getName(),"it.bz.tis.sasabus.backend.shared.travelplanner.Duration", structure.property("Duration").structure(), identities, seq, false);
            }
            // Transfers
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.Overview)obj).Transfers;
            if (value == null)
               structure.property("Transfers").nullValue();
            else
            {
                    structure.property("Transfers").integer((Integer)value);                          
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.travelplanner.ConSection", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // Journey
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.ConSection)obj).Journey;
            if (value == null)
               structure.property("Journey").nullValue();
            else
            {
               it.bz.tis.sasabus.backend.shared.travelplanner.Journey[] rawarray = (it.bz.tis.sasabus.backend.shared.travelplanner.Journey[])value;                        
               bz.davide.dmxmljson.marshalling.Array array = structure.property("Journey").array(rawarray.length);        
               for (Object o: rawarray) {                                    
                  if (o == null)                                              
                     array.item().nullValue();                                
                     internalMarschall(o, o.getClass().getName(), "it.bz.tis.sasabus.backend.shared.travelplanner.Journey", array.item().structure(), identities, seq, false);
               }                                                              
            }
            // Walk
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.ConSection)obj).Walk;
            if (value == null)
               structure.property("Walk").nullValue();
            else
            {
               it.bz.tis.sasabus.backend.shared.travelplanner.Walk[] rawarray = (it.bz.tis.sasabus.backend.shared.travelplanner.Walk[])value;                        
               bz.davide.dmxmljson.marshalling.Array array = structure.property("Walk").array(rawarray.length);        
               for (Object o: rawarray) {                                    
                  if (o == null)                                              
                     array.item().nullValue();                                
                     internalMarschall(o, o.getClass().getName(), "it.bz.tis.sasabus.backend.shared.travelplanner.Walk", array.item().structure(), identities, seq, false);
               }                                                              
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.travelplanner.Arrival", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // BasicStop
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.Arrival)obj).BasicStop;
            if (value == null)
               structure.property("BasicStop").nullValue();
            else
            {
                     internalMarschall(value, value.getClass().getName(),"it.bz.tis.sasabus.backend.shared.travelplanner.BasicStop", structure.property("BasicStop").structure(), identities, seq, false);
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.travelplanner.Departure", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // BasicStop
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.Departure)obj).BasicStop;
            if (value == null)
               structure.property("BasicStop").nullValue();
            else
            {
                     internalMarschall(value, value.getClass().getName(),"it.bz.tis.sasabus.backend.shared.travelplanner.BasicStop", structure.property("BasicStop").structure(), identities, seq, false);
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.travelplanner.Duration", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // Time
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.Duration)obj).Time;
            if (value == null)
               structure.property("Time").nullValue();
            else
            {
                    structure.property("Time").string((String)value);                          
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.travelplanner.Journey", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // JourneyAttributeList
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.Journey)obj).JourneyAttributeList;
            if (value == null)
               structure.property("JourneyAttributeList").nullValue();
            else
            {
                     internalMarschall(value, value.getClass().getName(),"it.bz.tis.sasabus.backend.shared.travelplanner.JourneyAttributeList", structure.property("JourneyAttributeList").structure(), identities, seq, false);
            }
            // PassList
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.Journey)obj).PassList;
            if (value == null)
               structure.property("PassList").nullValue();
            else
            {
                     internalMarschall(value, value.getClass().getName(),"it.bz.tis.sasabus.backend.shared.travelplanner.PassList", structure.property("PassList").structure(), identities, seq, false);
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.travelplanner.Walk", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // Duration
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.Walk)obj).Duration;
            if (value == null)
               structure.property("Duration").nullValue();
            else
            {
                     internalMarschall(value, value.getClass().getName(),"it.bz.tis.sasabus.backend.shared.travelplanner.WalkDuration", structure.property("Duration").structure(), identities, seq, false);
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.travelplanner.BasicStop", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // Arr
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.BasicStop)obj).Arr;
            if (value == null)
               structure.property("Arr").nullValue();
            else
            {
                     internalMarschall(value, value.getClass().getName(),"it.bz.tis.sasabus.backend.shared.travelplanner.DepArr", structure.property("Arr").structure(), identities, seq, false);
            }
            // Dep
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.BasicStop)obj).Dep;
            if (value == null)
               structure.property("Dep").nullValue();
            else
            {
                     internalMarschall(value, value.getClass().getName(),"it.bz.tis.sasabus.backend.shared.travelplanner.DepArr", structure.property("Dep").structure(), identities, seq, false);
            }
            // Station
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.BasicStop)obj).Station;
            if (value == null)
               structure.property("Station").nullValue();
            else
            {
                     internalMarschall(value, value.getClass().getName(),"it.bz.tis.sasabus.backend.shared.travelplanner.Station", structure.property("Station").structure(), identities, seq, false);
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.travelplanner.JourneyAttributeList", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // JourneyAttribute
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.JourneyAttributeList)obj).JourneyAttribute;
            if (value == null)
               structure.property("JourneyAttribute").nullValue();
            else
            {
               it.bz.tis.sasabus.backend.shared.travelplanner.JourneyAttribute[] rawarray = (it.bz.tis.sasabus.backend.shared.travelplanner.JourneyAttribute[])value;                        
               bz.davide.dmxmljson.marshalling.Array array = structure.property("JourneyAttribute").array(rawarray.length);        
               for (Object o: rawarray) {                                    
                  if (o == null)                                              
                     array.item().nullValue();                                
                     internalMarschall(o, o.getClass().getName(), "it.bz.tis.sasabus.backend.shared.travelplanner.JourneyAttribute", array.item().structure(), identities, seq, false);
               }                                                              
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.travelplanner.PassList", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // BasicStop
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.PassList)obj).BasicStop;
            if (value == null)
               structure.property("BasicStop").nullValue();
            else
            {
               it.bz.tis.sasabus.backend.shared.travelplanner.BasicStop[] rawarray = (it.bz.tis.sasabus.backend.shared.travelplanner.BasicStop[])value;                        
               bz.davide.dmxmljson.marshalling.Array array = structure.property("BasicStop").array(rawarray.length);        
               for (Object o: rawarray) {                                    
                  if (o == null)                                              
                     array.item().nullValue();                                
                     internalMarschall(o, o.getClass().getName(), "it.bz.tis.sasabus.backend.shared.travelplanner.BasicStop", array.item().structure(), identities, seq, false);
               }                                                              
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.travelplanner.WalkDuration", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // Time
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.WalkDuration)obj).Time;
            if (value == null)
               structure.property("Time").nullValue();
            else
            {
                    structure.property("Time").string((String)value);                          
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.travelplanner.DepArr", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // Time
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.DepArr)obj).Time;
            if (value == null)
               structure.property("Time").nullValue();
            else
            {
                    structure.property("Time").string((String)value);                          
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.travelplanner.JourneyAttribute", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // Attribute
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.JourneyAttribute)obj).Attribute;
            if (value == null)
               structure.property("Attribute").nullValue();
            else
            {
                     internalMarschall(value, value.getClass().getName(),"it.bz.tis.sasabus.backend.shared.travelplanner.Attribute", structure.property("Attribute").structure(), identities, seq, false);
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.travelplanner.Attribute", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // AttributeVariant
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.Attribute)obj).AttributeVariant;
            if (value == null)
               structure.property("AttributeVariant").nullValue();
            else
            {
               it.bz.tis.sasabus.backend.shared.travelplanner.AttributeVariant[] rawarray = (it.bz.tis.sasabus.backend.shared.travelplanner.AttributeVariant[])value;                        
               bz.davide.dmxmljson.marshalling.Array array = structure.property("AttributeVariant").array(rawarray.length);        
               for (Object o: rawarray) {                                    
                  if (o == null)                                              
                     array.item().nullValue();                                
                     internalMarschall(o, o.getClass().getName(), "it.bz.tis.sasabus.backend.shared.travelplanner.AttributeVariant", array.item().structure(), identities, seq, false);
               }                                                              
            }
            // type
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.Attribute)obj).type;
            if (value == null)
               structure.property("type").nullValue();
            else
            {
                    structure.property("type").string((String)value);                          
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.travelplanner.AttributeVariant", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // Text
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.AttributeVariant)obj).Text;
            if (value == null)
               structure.property("Text").nullValue();
            else
            {
                    structure.property("Text").string((String)value);                          
            }
            // type
            value = ((it.bz.tis.sasabus.backend.shared.travelplanner.AttributeVariant)obj).type;
            if (value == null)
               structure.property("type").nullValue();
            else
            {
                    structure.property("type").string((String)value);                          
            }
            if (!superClass)
               structure.close();
         }
      });

   }
}
