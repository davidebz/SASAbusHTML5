/*********************************************************************************
 *                                                                               *
 * WARNING: File automatically generated by DMXmlJson. DON'T CHANGE IT manually! *
 *                                                                               *
 *********************************************************************************/

package it.bz.tis.sasabus.backend.shared;


public class SASAbusBackendMarshaller_Helper extends bz.davide.dmxmljson.marshalling.Marshaller
{
   protected SASAbusBackendMarshaller_Helper()
   {
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.NewsList", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // news
            value = ((it.bz.tis.sasabus.backend.shared.NewsList)obj).news;
            if (value == null)
               structure.property("news").nullValue();
            else
            {
               java.util.ArrayList arrayList = (java.util.ArrayList)value;                        
               bz.davide.dmxmljson.marshalling.Array array = structure.property("news").array(arrayList.size());        
               for (Object o: arrayList) {                                    
                  if (o == null)                                              
                     array.item().nullValue();                                
                  else                                                        
                     internalMarschall(o, o.getClass().getName(), "it.bz.tis.sasabus.backend.shared.News", array.item().structure(), identities, seq, false);
               }                                                              
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.BusLineList", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // busLines
            value = ((it.bz.tis.sasabus.backend.shared.BusLineList)obj).busLines;
            if (value == null)
               structure.property("busLines").nullValue();
            else
            {
               it.bz.tis.sasabus.backend.shared.BusLine[] rawarray = (it.bz.tis.sasabus.backend.shared.BusLine[])value;                        
               bz.davide.dmxmljson.marshalling.Array array = structure.property("busLines").array(rawarray.length);        
               for (Object o: rawarray) {                                    
                  if (o == null)                                              
                     array.item().nullValue();                                
                     internalMarschall(o, o.getClass().getName(), "it.bz.tis.sasabus.backend.shared.BusLine", array.item().structure(), identities, seq, false);
               }                                                              
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.AreaList", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // areas
            value = ((it.bz.tis.sasabus.backend.shared.AreaList)obj).areas;
            if (value == null)
               structure.property("areas").nullValue();
            else
            {
               it.bz.tis.sasabus.backend.shared.Area[] rawarray = (it.bz.tis.sasabus.backend.shared.Area[])value;                        
               bz.davide.dmxmljson.marshalling.Array array = structure.property("areas").array(rawarray.length);        
               for (Object o: rawarray) {                                    
                  if (o == null)                                              
                     array.item().nullValue();                                
                     internalMarschall(o, o.getClass().getName(), "it.bz.tis.sasabus.backend.shared.Area", array.item().structure(), identities, seq, false);
               }                                                              
            }
            // lastModified
            value = ((it.bz.tis.sasabus.backend.shared.AreaList)obj).lastModified;
            if (value == null)
               structure.property("lastModified").nullValue();
            else
            {
                    structure.property("lastModified").integer((Long)value);                          
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.BusTripStopList", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // busTripStops
            value = ((it.bz.tis.sasabus.backend.shared.BusTripStopList)obj).busTripStops;
            if (value == null)
               structure.property("busTripStops").nullValue();
            else
            {
               it.bz.tis.sasabus.backend.shared.BusTripStopReference[] rawarray = (it.bz.tis.sasabus.backend.shared.BusTripStopReference[])value;                        
               bz.davide.dmxmljson.marshalling.Array array = structure.property("busTripStops").array(rawarray.length);        
               for (Object o: rawarray) {                                    
                  if (o == null)                                              
                     array.item().nullValue();                                
                     internalMarschall(o, o.getClass().getName(), "it.bz.tis.sasabus.backend.shared.BusTripStopReference", array.item().structure(), identities, seq, false);
               }                                                              
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.SASAbusDBLastModified", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // timestamp
            value = ((it.bz.tis.sasabus.backend.shared.SASAbusDBLastModified)obj).timestamp;
            if (value == null)
               structure.property("timestamp").nullValue();
            else
            {
                    structure.property("timestamp").integer((Long)value);                          
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.ParkingInfo", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // slots
            value = ((it.bz.tis.sasabus.backend.shared.ParkingInfo)obj).slots;
            if (value == null)
               structure.property("slots").nullValue();
            else
            {
                    structure.property("slots").integer((Integer)value);                          
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.FreeSlots", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // slots
            value = ((it.bz.tis.sasabus.backend.shared.FreeSlots)obj).slots;
            if (value == null)
               structure.property("slots").nullValue();
            else
            {
                    structure.property("slots").integer((Integer)value);                          
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.News", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // id
            value = ((it.bz.tis.sasabus.backend.shared.News)obj).id;
            if (value == null)
               structure.property("id").nullValue();
            else
            {
                    structure.property("id").string((String)value);                          
            }
            // lastmod
            value = ((it.bz.tis.sasabus.backend.shared.News)obj).lastmod;
            if (value == null)
               structure.property("lastmod").nullValue();
            else
            {
                    structure.property("lastmod").string((String)value);                          
            }
            // linienliste
            value = ((it.bz.tis.sasabus.backend.shared.News)obj).linienliste;
            if (value == null)
               structure.property("linienliste").nullValue();
            else
            {
               java.util.ArrayList arrayList = (java.util.ArrayList)value;                        
               bz.davide.dmxmljson.marshalling.Array array = structure.property("linienliste").array(arrayList.size());        
               for (Object o: arrayList) {                                    
                  if (o == null)                                              
                     array.item().nullValue();                                
                  else                                                        
                     array.item().string((String)o);                          
               }                                                              
            }
            // nachricht_de
            value = ((it.bz.tis.sasabus.backend.shared.News)obj).nachricht_de;
            if (value == null)
               structure.property("nachricht_de").nullValue();
            else
            {
                    structure.property("nachricht_de").string((String)value);                          
            }
            // nachricht_it
            value = ((it.bz.tis.sasabus.backend.shared.News)obj).nachricht_it;
            if (value == null)
               structure.property("nachricht_it").nullValue();
            else
            {
                    structure.property("nachricht_it").string((String)value);                          
            }
            // titel_de
            value = ((it.bz.tis.sasabus.backend.shared.News)obj).titel_de;
            if (value == null)
               structure.property("titel_de").nullValue();
            else
            {
                    structure.property("titel_de").string((String)value);                          
            }
            // titel_it
            value = ((it.bz.tis.sasabus.backend.shared.News)obj).titel_it;
            if (value == null)
               structure.property("titel_it").nullValue();
            else
            {
                    structure.property("titel_it").string((String)value);                          
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.BusLine", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // area
            value = ((it.bz.tis.sasabus.backend.shared.BusLine)obj).area;
            if (value == null)
               structure.property("area").nullValue();
            else
            {
                     internalMarschall(value, value.getClass().getName(),"it.bz.tis.sasabus.backend.shared.Area", structure.property("area").structure(), identities, seq, false);
            }
            // busStops
            value = ((it.bz.tis.sasabus.backend.shared.BusLine)obj).busStops;
            if (value == null)
               structure.property("busStops").nullValue();
            else
            {
               it.bz.tis.sasabus.backend.shared.BusStop[] rawarray = (it.bz.tis.sasabus.backend.shared.BusStop[])value;                        
               bz.davide.dmxmljson.marshalling.Array array = structure.property("busStops").array(rawarray.length);        
               for (Object o: rawarray) {                                    
                  if (o == null)                                              
                     array.item().nullValue();                                
                     internalMarschall(o, o.getClass().getName(), "it.bz.tis.sasabus.backend.shared.BusStop", array.item().structure(), identities, seq, false);
               }                                                              
            }
            // id
            value = ((it.bz.tis.sasabus.backend.shared.BusLine)obj).id;
            if (value == null)
               structure.property("id").nullValue();
            else
            {
                    structure.property("id").integer((Integer)value);                          
            }
            // number
            value = ((it.bz.tis.sasabus.backend.shared.BusLine)obj).number;
            if (value == null)
               structure.property("number").nullValue();
            else
            {
                    structure.property("number").string((String)value);                          
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.Area", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // bounds
            value = ((it.bz.tis.sasabus.backend.shared.Area)obj).bounds;
            if (value == null)
               structure.property("bounds").nullValue();
            else
            {
               it.bz.tis.sasabus.backend.shared.LatLng[] rawarray = (it.bz.tis.sasabus.backend.shared.LatLng[])value;                        
               bz.davide.dmxmljson.marshalling.Array array = structure.property("bounds").array(rawarray.length);        
               for (Object o: rawarray) {                                    
                  if (o == null)                                              
                     array.item().nullValue();                                
                     internalMarschall(o, o.getClass().getName(), "it.bz.tis.sasabus.backend.shared.LatLng", array.item().structure(), identities, seq, false);
               }                                                              
            }
            // busLines
            value = ((it.bz.tis.sasabus.backend.shared.Area)obj).busLines;
            if (value == null)
               structure.property("busLines").nullValue();
            else
            {
               it.bz.tis.sasabus.backend.shared.BusLine[] rawarray = (it.bz.tis.sasabus.backend.shared.BusLine[])value;                        
               bz.davide.dmxmljson.marshalling.Array array = structure.property("busLines").array(rawarray.length);        
               for (Object o: rawarray) {                                    
                  if (o == null)                                              
                     array.item().nullValue();                                
                     internalMarschall(o, o.getClass().getName(), "it.bz.tis.sasabus.backend.shared.BusLine", array.item().structure(), identities, seq, false);
               }                                                              
            }
            // id
            value = ((it.bz.tis.sasabus.backend.shared.Area)obj).id;
            if (value == null)
               structure.property("id").nullValue();
            else
            {
                    structure.property("id").integer((Integer)value);                          
            }
            // name_de
            value = ((it.bz.tis.sasabus.backend.shared.Area)obj).name_de;
            if (value == null)
               structure.property("name_de").nullValue();
            else
            {
                    structure.property("name_de").string((String)value);                          
            }
            // name_it
            value = ((it.bz.tis.sasabus.backend.shared.Area)obj).name_it;
            if (value == null)
               structure.property("name_it").nullValue();
            else
            {
                    structure.property("name_it").string((String)value);                          
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.BusTripStopReference", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // busTrip
            value = ((it.bz.tis.sasabus.backend.shared.BusTripStopReference)obj).busTrip;
            if (value == null)
               structure.property("busTrip").nullValue();
            else
            {
                     internalMarschall(value, value.getClass().getName(),"it.bz.tis.sasabus.backend.shared.BusTrip", structure.property("busTrip").structure(), identities, seq, false);
            }
            // index
            value = ((it.bz.tis.sasabus.backend.shared.BusTripStopReference)obj).index;
            if (value == null)
               structure.property("index").nullValue();
            else
            {
                    structure.property("index").integer((Integer)value);                          
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.BusStop", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // busStation
            value = ((it.bz.tis.sasabus.backend.shared.BusStop)obj).busStation;
            if (value == null)
               structure.property("busStation").nullValue();
            else
            {
                     internalMarschall(value, value.getClass().getName(),"it.bz.tis.sasabus.backend.shared.BusStation", structure.property("busStation").structure(), identities, seq, false);
            }
            // id
            value = ((it.bz.tis.sasabus.backend.shared.BusStop)obj).id;
            if (value == null)
               structure.property("id").nullValue();
            else
            {
                    structure.property("id").integer((Integer)value);                          
            }
            // lat
            value = ((it.bz.tis.sasabus.backend.shared.BusStop)obj).lat;
            if (value == null)
               structure.property("lat").nullValue();
            else
            {
                    structure.property("lat").decimal((Double)value);                          
            }
            // lon
            value = ((it.bz.tis.sasabus.backend.shared.BusStop)obj).lon;
            if (value == null)
               structure.property("lon").nullValue();
            else
            {
                    structure.property("lon").decimal((Double)value);                          
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.LatLng", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // lat
            value = ((it.bz.tis.sasabus.backend.shared.LatLng)obj).lat;
            if (value == null)
               structure.property("lat").nullValue();
            else
            {
                    structure.property("lat").decimal((Double)value);                          
            }
            // lon
            value = ((it.bz.tis.sasabus.backend.shared.LatLng)obj).lon;
            if (value == null)
               structure.property("lon").nullValue();
            else
            {
                    structure.property("lon").decimal((Double)value);                          
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.BusTrip", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // busLineId
            value = ((it.bz.tis.sasabus.backend.shared.BusTrip)obj).busLineId;
            if (value == null)
               structure.property("busLineId").nullValue();
            else
            {
                    structure.property("busLineId").integer((Integer)value);                          
            }
            // busTripStop
            value = ((it.bz.tis.sasabus.backend.shared.BusTrip)obj).busTripStop;
            if (value == null)
               structure.property("busTripStop").nullValue();
            else
            {
               it.bz.tis.sasabus.backend.shared.BusTripStop[] rawarray = (it.bz.tis.sasabus.backend.shared.BusTripStop[])value;                        
               bz.davide.dmxmljson.marshalling.Array array = structure.property("busTripStop").array(rawarray.length);        
               for (Object o: rawarray) {                                    
                  if (o == null)                                              
                     array.item().nullValue();                                
                     internalMarschall(o, o.getClass().getName(), "it.bz.tis.sasabus.backend.shared.BusTripStop", array.item().structure(), identities, seq, false);
               }                                                              
            }
            // endHHMMSS
            value = ((it.bz.tis.sasabus.backend.shared.BusTrip)obj).endHHMMSS;
            if (value == null)
               structure.property("endHHMMSS").nullValue();
            else
            {
                    structure.property("endHHMMSS").integer((Integer)value);                          
            }
            // id
            value = ((it.bz.tis.sasabus.backend.shared.BusTrip)obj).id;
            if (value == null)
               structure.property("id").nullValue();
            else
            {
                    structure.property("id").integer((Integer)value);                          
            }
            // startHHMMSS
            value = ((it.bz.tis.sasabus.backend.shared.BusTrip)obj).startHHMMSS;
            if (value == null)
               structure.property("startHHMMSS").nullValue();
            else
            {
                    structure.property("startHHMMSS").integer((Integer)value);                          
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.BusStation", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // busLines
            value = ((it.bz.tis.sasabus.backend.shared.BusStation)obj).busLines;
            if (value == null)
               structure.property("busLines").nullValue();
            else
            {
               it.bz.tis.sasabus.backend.shared.BusLine[] rawarray = (it.bz.tis.sasabus.backend.shared.BusLine[])value;                        
               bz.davide.dmxmljson.marshalling.Array array = structure.property("busLines").array(rawarray.length);        
               for (Object o: rawarray) {                                    
                  if (o == null)                                              
                     array.item().nullValue();                                
                     internalMarschall(o, o.getClass().getName(), "it.bz.tis.sasabus.backend.shared.BusLine", array.item().structure(), identities, seq, false);
               }                                                              
            }
            // busStops
            value = ((it.bz.tis.sasabus.backend.shared.BusStation)obj).busStops;
            if (value == null)
               structure.property("busStops").nullValue();
            else
            {
               it.bz.tis.sasabus.backend.shared.BusStop[] rawarray = (it.bz.tis.sasabus.backend.shared.BusStop[])value;                        
               bz.davide.dmxmljson.marshalling.Array array = structure.property("busStops").array(rawarray.length);        
               for (Object o: rawarray) {                                    
                  if (o == null)                                              
                     array.item().nullValue();                                
                     internalMarschall(o, o.getClass().getName(), "it.bz.tis.sasabus.backend.shared.BusStop", array.item().structure(), identities, seq, false);
               }                                                              
            }
            // id
            value = ((it.bz.tis.sasabus.backend.shared.BusStation)obj).id;
            if (value == null)
               structure.property("id").nullValue();
            else
            {
                    structure.property("id").string((String)value);                          
            }
            // name_de
            value = ((it.bz.tis.sasabus.backend.shared.BusStation)obj).name_de;
            if (value == null)
               structure.property("name_de").nullValue();
            else
            {
                    structure.property("name_de").string((String)value);                          
            }
            // name_it
            value = ((it.bz.tis.sasabus.backend.shared.BusStation)obj).name_it;
            if (value == null)
               structure.property("name_it").nullValue();
            else
            {
                    structure.property("name_it").string((String)value);                          
            }
            if (!superClass)
               structure.close();
         }
      });
      this.putClassMarshaller("it.bz.tis.sasabus.backend.shared.BusTripStop", new bz.davide.dmxmljson.marshalling.ClassMarshaller() {
         @Override public void marshall(Object obj, String compileTimeClassName, bz.davide.dmxmljson.marshalling.Structure structure, java.util.IdentityHashMap<Object, bz.davide.dmxmljson.marshalling.Structure> identities, long[] seq, boolean superClass) throws Exception {
            if (!superClass) {
               if (isReference(structure, obj, identities, seq))
                  return;
               identities.put(obj, structure);
               structure.open(shortName(compileTimeClassName), shortName(obj.getClass().getName()), null);
            }
            Object value;
            // busStopId
            value = ((it.bz.tis.sasabus.backend.shared.BusTripStop)obj).busStopId;
            if (value == null)
               structure.property("busStopId").nullValue();
            else
            {
                    structure.property("busStopId").integer((Integer)value);                          
            }
            // id
            value = ((it.bz.tis.sasabus.backend.shared.BusTripStop)obj).id;
            if (value == null)
               structure.property("id").nullValue();
            else
            {
                    structure.property("id").integer((Integer)value);                          
            }
            // timeHHMMSS
            value = ((it.bz.tis.sasabus.backend.shared.BusTripStop)obj).timeHHMMSS;
            if (value == null)
               structure.property("timeHHMMSS").nullValue();
            else
            {
                    structure.property("timeHHMMSS").integer((Integer)value);                          
            }
            if (!superClass)
               structure.close();
         }
      });

   }
}
