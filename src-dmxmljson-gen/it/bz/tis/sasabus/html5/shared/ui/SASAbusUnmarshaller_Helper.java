/*********************************************************************************
 *                                                                               *
 * WARNING: File automatically generated by DMXmlJson. DON'T CHANGE IT manually! *
 *                                                                               *
 *********************************************************************************/

package it.bz.tis.sasabus.html5.shared.ui;


public class SASAbusUnmarshaller_Helper extends it.bz.tis.sasabus.html5.shared.ui.menu.SASAbusUnmarshaller_Helper
{
   protected SASAbusUnmarshaller_Helper()
   {
      this.emptyObjectCheck.put("it.bz.tis.sasabus.html5.shared.ui.HomePanel", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.bz.tis.sasabus.html5.shared.ui.HomePanel>() {
         @Override public void check(it.bz.tis.sasabus.html5.shared.ui.HomePanel  ret){
            // favouriteBusStationListPanel
            if (ret.favouriteBusStationListPanel != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.HomePanel.favouriteBusStationListPanel");
            // favouriteContainer
            if (ret.favouriteContainer != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.HomePanel.favouriteContainer");
            // introText
            if (ret.introText != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.HomePanel.introText");
            // map
            if (ret.map != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.HomePanel.map");
         }
      });
      this.putInstanceFactory("it.bz.tis.sasabus.html5.shared.ui.HomePanel", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.bz.tis.sasabus.html5.shared.ui.HomePanel ret = new it.bz.tis.sasabus.html5.shared.ui.HomePanel();
            return ret;
         }
      });

      this.putClassUnmarshaller("it.bz.tis.sasabus.html5.shared.ui.HomePanel", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            internalUnmarschall(structure, "bz.davide.dmweb.shared.view.DivView", obj, identities);
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            // favouriteBusStationListPanel
            if ((value = structure.property("favouriteBusStationListPanel")) != null)
               if (value.isNull())
                  ((it.bz.tis.sasabus.html5.shared.ui.HomePanel)obj).favouriteBusStationListPanel = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((it.bz.tis.sasabus.html5.shared.ui.HomePanel)obj).favouriteBusStationListPanel = (it.bz.tis.sasabus.html5.shared.ui.FavouriteBusStationListPanel)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("FavouriteBusStationListPanel"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((it.bz.tis.sasabus.html5.shared.ui.HomePanel)obj).favouriteBusStationListPanel = (it.bz.tis.sasabus.html5.shared.ui.FavouriteBusStationListPanel)o;
                  }
               }
            // favouriteContainer
            if ((value = structure.property("favouriteContainer")) != null)
               if (value.isNull())
                  ((it.bz.tis.sasabus.html5.shared.ui.HomePanel)obj).favouriteContainer = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((it.bz.tis.sasabus.html5.shared.ui.HomePanel)obj).favouriteContainer = (bz.davide.dmweb.shared.view.DivView)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("DivView"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((it.bz.tis.sasabus.html5.shared.ui.HomePanel)obj).favouriteContainer = (bz.davide.dmweb.shared.view.DivView)o;
                  }
               }
            // introText
            if ((value = structure.property("introText")) != null)
               if (value.isNull())
                  ((it.bz.tis.sasabus.html5.shared.ui.HomePanel)obj).introText = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((it.bz.tis.sasabus.html5.shared.ui.HomePanel)obj).introText = (bz.davide.dmweb.shared.view.DivView)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("DivView"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((it.bz.tis.sasabus.html5.shared.ui.HomePanel)obj).introText = (bz.davide.dmweb.shared.view.DivView)o;
                  }
               }
            // map
            if ((value = structure.property("map")) != null)
               if (value.isNull())
                  ((it.bz.tis.sasabus.html5.shared.ui.HomePanel)obj).map = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((it.bz.tis.sasabus.html5.shared.ui.HomePanel)obj).map = (it.bz.tis.sasabus.html5.shared.ui.map.SASAbusMap)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("SASAbusMap"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((it.bz.tis.sasabus.html5.shared.ui.HomePanel)obj).map = (it.bz.tis.sasabus.html5.shared.ui.map.SASAbusMap)o;
                  }
               }
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.bz.tis.sasabus.html5.shared.ui.AboutPanel", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.bz.tis.sasabus.html5.shared.ui.AboutPanel>() {
         @Override public void check(it.bz.tis.sasabus.html5.shared.ui.AboutPanel  ret){
            // copyrightCompanyAddress
            if (ret.copyrightCompanyAddress != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.AboutPanel.copyrightCompanyAddress");
            // copyrightLink
            if (ret.copyrightLink != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.AboutPanel.copyrightLink");
            // copyrightYears
            if (ret.copyrightYears != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.AboutPanel.copyrightYears");
            // infoText
            if (ret.infoText != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.AboutPanel.infoText");
            // licenseLabel
            if (ret.licenseLabel != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.AboutPanel.licenseLabel");
            // licenseLink
            if (ret.licenseLink != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.AboutPanel.licenseLink");
            // teamLink
            if (ret.teamLink != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.AboutPanel.teamLink");
            // teamMembers
            if (ret.teamMembers != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.AboutPanel.teamMembers");
            // thirdPartyLicenses
            if (ret.thirdPartyLicenses != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.AboutPanel.thirdPartyLicenses");
         }
      });
      this.putInstanceFactory("it.bz.tis.sasabus.html5.shared.ui.AboutPanel", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.bz.tis.sasabus.html5.shared.ui.AboutPanel ret = new it.bz.tis.sasabus.html5.shared.ui.AboutPanel();
            return ret;
         }
      });

      this.putClassUnmarshaller("it.bz.tis.sasabus.html5.shared.ui.AboutPanel", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            internalUnmarschall(structure, "bz.davide.dmweb.shared.view.DivView", obj, identities);
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            // copyrightCompanyAddress
            if ((value = structure.property("copyrightCompanyAddress")) != null)
               if (value.isNull())
                  ((it.bz.tis.sasabus.html5.shared.ui.AboutPanel)obj).copyrightCompanyAddress = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((it.bz.tis.sasabus.html5.shared.ui.AboutPanel)obj).copyrightCompanyAddress = (bz.davide.dmweb.shared.view.SpanView)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("SpanView"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((it.bz.tis.sasabus.html5.shared.ui.AboutPanel)obj).copyrightCompanyAddress = (bz.davide.dmweb.shared.view.SpanView)o;
                  }
               }
            // copyrightLink
            if ((value = structure.property("copyrightLink")) != null)
               if (value.isNull())
                  ((it.bz.tis.sasabus.html5.shared.ui.AboutPanel)obj).copyrightLink = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((it.bz.tis.sasabus.html5.shared.ui.AboutPanel)obj).copyrightLink = (bz.davide.dmweb.shared.view.AnchorView)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("AnchorView"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((it.bz.tis.sasabus.html5.shared.ui.AboutPanel)obj).copyrightLink = (bz.davide.dmweb.shared.view.AnchorView)o;
                  }
               }
            // copyrightYears
            if ((value = structure.property("copyrightYears")) != null)
               if (value.isNull())
                  ((it.bz.tis.sasabus.html5.shared.ui.AboutPanel)obj).copyrightYears = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((it.bz.tis.sasabus.html5.shared.ui.AboutPanel)obj).copyrightYears = (bz.davide.dmweb.shared.view.SpanView)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("SpanView"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((it.bz.tis.sasabus.html5.shared.ui.AboutPanel)obj).copyrightYears = (bz.davide.dmweb.shared.view.SpanView)o;
                  }
               }
            // infoText
            if ((value = structure.property("infoText")) != null)
               if (value.isNull())
                  ((it.bz.tis.sasabus.html5.shared.ui.AboutPanel)obj).infoText = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((it.bz.tis.sasabus.html5.shared.ui.AboutPanel)obj).infoText = (bz.davide.dmweb.shared.view.SpanView)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("SpanView"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((it.bz.tis.sasabus.html5.shared.ui.AboutPanel)obj).infoText = (bz.davide.dmweb.shared.view.SpanView)o;
                  }
               }
            // licenseLabel
            if ((value = structure.property("licenseLabel")) != null)
               if (value.isNull())
                  ((it.bz.tis.sasabus.html5.shared.ui.AboutPanel)obj).licenseLabel = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((it.bz.tis.sasabus.html5.shared.ui.AboutPanel)obj).licenseLabel = (bz.davide.dmweb.shared.view.SpanView)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("SpanView"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((it.bz.tis.sasabus.html5.shared.ui.AboutPanel)obj).licenseLabel = (bz.davide.dmweb.shared.view.SpanView)o;
                  }
               }
            // licenseLink
            if ((value = structure.property("licenseLink")) != null)
               if (value.isNull())
                  ((it.bz.tis.sasabus.html5.shared.ui.AboutPanel)obj).licenseLink = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((it.bz.tis.sasabus.html5.shared.ui.AboutPanel)obj).licenseLink = (bz.davide.dmweb.shared.view.AnchorView)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("AnchorView"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((it.bz.tis.sasabus.html5.shared.ui.AboutPanel)obj).licenseLink = (bz.davide.dmweb.shared.view.AnchorView)o;
                  }
               }
            // teamLink
            if ((value = structure.property("teamLink")) != null)
               if (value.isNull())
                  ((it.bz.tis.sasabus.html5.shared.ui.AboutPanel)obj).teamLink = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((it.bz.tis.sasabus.html5.shared.ui.AboutPanel)obj).teamLink = (bz.davide.dmweb.shared.view.AnchorView)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("AnchorView"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((it.bz.tis.sasabus.html5.shared.ui.AboutPanel)obj).teamLink = (bz.davide.dmweb.shared.view.AnchorView)o;
                  }
               }
            // teamMembers
            if ((value = structure.property("teamMembers")) != null)
               if (value.isNull())
                  ((it.bz.tis.sasabus.html5.shared.ui.AboutPanel)obj).teamMembers = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((it.bz.tis.sasabus.html5.shared.ui.AboutPanel)obj).teamMembers = (bz.davide.dmweb.shared.view.DivView)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("DivView"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((it.bz.tis.sasabus.html5.shared.ui.AboutPanel)obj).teamMembers = (bz.davide.dmweb.shared.view.DivView)o;
                  }
               }
            // thirdPartyLicenses
            if ((value = structure.property("thirdPartyLicenses")) != null)
               if (value.isNull())
                  ((it.bz.tis.sasabus.html5.shared.ui.AboutPanel)obj).thirdPartyLicenses = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((it.bz.tis.sasabus.html5.shared.ui.AboutPanel)obj).thirdPartyLicenses = (bz.davide.dmweb.shared.view.DivView)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("DivView"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((it.bz.tis.sasabus.html5.shared.ui.AboutPanel)obj).thirdPartyLicenses = (bz.davide.dmweb.shared.view.DivView)o;
                  }
               }
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.bz.tis.sasabus.html5.shared.ui.AboutPanelCloseHandler", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.bz.tis.sasabus.html5.shared.ui.AboutPanelCloseHandler>() {
         @Override public void check(it.bz.tis.sasabus.html5.shared.ui.AboutPanelCloseHandler  ret){
            // aboutPanel
            if (ret.aboutPanel != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.AboutPanelCloseHandler.aboutPanel");
            // thirdPartyLicenses
            if (ret.thirdPartyLicenses != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.AboutPanelCloseHandler.thirdPartyLicenses");
         }
      });
      this.putInstanceFactory("it.bz.tis.sasabus.html5.shared.ui.AboutPanelCloseHandler", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.bz.tis.sasabus.html5.shared.ui.AboutPanelCloseHandler ret = new it.bz.tis.sasabus.html5.shared.ui.AboutPanelCloseHandler();
            return ret;
         }
      });

      this.putClassUnmarshaller("it.bz.tis.sasabus.html5.shared.ui.AboutPanelCloseHandler", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            // aboutPanel
            if ((value = structure.property("aboutPanel")) != null)
               if (value.isNull())
                  ((it.bz.tis.sasabus.html5.shared.ui.AboutPanelCloseHandler)obj).aboutPanel = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((it.bz.tis.sasabus.html5.shared.ui.AboutPanelCloseHandler)obj).aboutPanel = (it.bz.tis.sasabus.html5.shared.ui.AboutPanel)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("AboutPanel"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((it.bz.tis.sasabus.html5.shared.ui.AboutPanelCloseHandler)obj).aboutPanel = (it.bz.tis.sasabus.html5.shared.ui.AboutPanel)o;
                  }
               }
            // thirdPartyLicenses
            if ((value = structure.property("thirdPartyLicenses")) != null)
               if (value.isNull())
                  ((it.bz.tis.sasabus.html5.shared.ui.AboutPanelCloseHandler)obj).thirdPartyLicenses = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((it.bz.tis.sasabus.html5.shared.ui.AboutPanelCloseHandler)obj).thirdPartyLicenses = (bz.davide.dmweb.shared.view.DivView)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("DivView"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((it.bz.tis.sasabus.html5.shared.ui.AboutPanelCloseHandler)obj).thirdPartyLicenses = (bz.davide.dmweb.shared.view.DivView)o;
                  }
               }
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.bz.tis.sasabus.html5.shared.ui.AboutPanelShow3rdPartyLicenses", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.bz.tis.sasabus.html5.shared.ui.AboutPanelShow3rdPartyLicenses>() {
         @Override public void check(it.bz.tis.sasabus.html5.shared.ui.AboutPanelShow3rdPartyLicenses  ret){
            // licensesPanel
            if (ret.licensesPanel != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.AboutPanelShow3rdPartyLicenses.licensesPanel");
         }
      });
      this.putInstanceFactory("it.bz.tis.sasabus.html5.shared.ui.AboutPanelShow3rdPartyLicenses", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.bz.tis.sasabus.html5.shared.ui.AboutPanelShow3rdPartyLicenses ret = new it.bz.tis.sasabus.html5.shared.ui.AboutPanelShow3rdPartyLicenses();
            return ret;
         }
      });

      this.putClassUnmarshaller("it.bz.tis.sasabus.html5.shared.ui.AboutPanelShow3rdPartyLicenses", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            // licensesPanel
            if ((value = structure.property("licensesPanel")) != null)
               if (value.isNull())
                  ((it.bz.tis.sasabus.html5.shared.ui.AboutPanelShow3rdPartyLicenses)obj).licensesPanel = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((it.bz.tis.sasabus.html5.shared.ui.AboutPanelShow3rdPartyLicenses)obj).licensesPanel = (bz.davide.dmweb.shared.view.DivView)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("DivView"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((it.bz.tis.sasabus.html5.shared.ui.AboutPanelShow3rdPartyLicenses)obj).licensesPanel = (bz.davide.dmweb.shared.view.DivView)o;
                  }
               }
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.bz.tis.sasabus.html5.shared.ui.SASABzRoutingViewFactory", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.bz.tis.sasabus.html5.shared.ui.SASABzRoutingViewFactory>() {
         @Override public void check(it.bz.tis.sasabus.html5.shared.ui.SASABzRoutingViewFactory  ret){
         }
      });
      this.putInstanceFactory("it.bz.tis.sasabus.html5.shared.ui.SASABzRoutingViewFactory", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.bz.tis.sasabus.html5.shared.ui.SASABzRoutingViewFactory ret = new it.bz.tis.sasabus.html5.shared.ui.SASABzRoutingViewFactory();
            return ret;
         }
      });

      this.putClassUnmarshaller("it.bz.tis.sasabus.html5.shared.ui.SASABzRoutingViewFactory", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.bz.tis.sasabus.html5.shared.ui.AboutInfos", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.bz.tis.sasabus.html5.shared.ui.AboutInfos>() {
         @Override public void check(it.bz.tis.sasabus.html5.shared.ui.AboutInfos  ret){
            // copyrightCompany
            if (ret.copyrightCompany != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.AboutInfos.copyrightCompany");
            // copyrightCompanyAddress
            if (ret.copyrightCompanyAddress != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.AboutInfos.copyrightCompanyAddress");
            // copyrightCompanyUrl
            if (ret.copyrightCompanyUrl != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.AboutInfos.copyrightCompanyUrl");
            // copyrightYears
            if (ret.copyrightYears != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.AboutInfos.copyrightYears");
            // infos
            if (ret.infos != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.AboutInfos.infos");
            // libraries
            if (ret.libraries != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.AboutInfos.libraries");
            // licenseLabel
            if (ret.licenseLabel != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.AboutInfos.licenseLabel");
            // licenseName
            if (ret.licenseName != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.AboutInfos.licenseName");
            // licenseUrl
            if (ret.licenseUrl != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.AboutInfos.licenseUrl");
            // teamMembers
            if (ret.teamMembers != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.AboutInfos.teamMembers");
            // teamName
            if (ret.teamName != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.AboutInfos.teamName");
            // teamUrl
            if (ret.teamUrl != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.AboutInfos.teamUrl");
         }
      });
      this.putInstanceFactory("it.bz.tis.sasabus.html5.shared.ui.AboutInfos", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.bz.tis.sasabus.html5.shared.ui.AboutInfos ret = new it.bz.tis.sasabus.html5.shared.ui.AboutInfos();
            return ret;
         }
      });

      this.putClassUnmarshaller("it.bz.tis.sasabus.html5.shared.ui.AboutInfos", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            // copyrightCompany
            if ((value = structure.property("copyrightCompany")) != null)
               if (value.isNull())
                  ((it.bz.tis.sasabus.html5.shared.ui.AboutInfos)obj).copyrightCompany = null;
               else
               {
                  ((it.bz.tis.sasabus.html5.shared.ui.AboutInfos)obj).copyrightCompany = value.string();
               }
            // copyrightCompanyAddress
            if ((value = structure.property("copyrightCompanyAddress")) != null)
               if (value.isNull())
                  ((it.bz.tis.sasabus.html5.shared.ui.AboutInfos)obj).copyrightCompanyAddress = null;
               else
               {
                  ((it.bz.tis.sasabus.html5.shared.ui.AboutInfos)obj).copyrightCompanyAddress = value.string();
               }
            // copyrightCompanyUrl
            if ((value = structure.property("copyrightCompanyUrl")) != null)
               if (value.isNull())
                  ((it.bz.tis.sasabus.html5.shared.ui.AboutInfos)obj).copyrightCompanyUrl = null;
               else
               {
                  ((it.bz.tis.sasabus.html5.shared.ui.AboutInfos)obj).copyrightCompanyUrl = value.string();
               }
            // copyrightYears
            if ((value = structure.property("copyrightYears")) != null)
               if (value.isNull())
                  ((it.bz.tis.sasabus.html5.shared.ui.AboutInfos)obj).copyrightYears = null;
               else
               {
                  ((it.bz.tis.sasabus.html5.shared.ui.AboutInfos)obj).copyrightYears = value.string();
               }
            // infos
            if ((value = structure.property("infos")) != null)
               if (value.isNull())
                  ((it.bz.tis.sasabus.html5.shared.ui.AboutInfos)obj).infos = null;
               else
               {
                  ((it.bz.tis.sasabus.html5.shared.ui.AboutInfos)obj).infos = value.string();
               }
            // libraries
            if ((value = structure.property("libraries")) != null)
               if (value.isNull())
                  ((it.bz.tis.sasabus.html5.shared.ui.AboutInfos)obj).libraries = null;
               else
               {
                  bz.davide.dmxmljson.unmarshalling.Array arr = value.array();        
                  arr.open();        
                  it.bz.tis.sasabus.html5.shared.ui.ThirdPartyLibrary[] arrayList = new it.bz.tis.sasabus.html5.shared.ui.ThirdPartyLibrary[arr.length()];       
                  for (int i = 0; i < arrayList.length; i++) {                       
                     value = arr.nextItem();                                       
                     if (value.isNull())                                           
                        arrayList[i] = null;                                       
                     else                                                          
                     {                                                                   
                        bz.davide.dmxmljson.unmarshalling.Structure tmpStructure = value.structure();
                        String refid = tmpStructure.getRefId();    
                        if (refid != null)                              
                           arrayList[i] = (it.bz.tis.sasabus.html5.shared.ui.ThirdPartyLibrary)(identities.get(refid));                                                
                        else {
                           Object o = newInstance(tmpStructure.getRuntimeClassName("ThirdPartyLibrary"));              
                           internalUnmarschall(tmpStructure, o.getClass().getName(), o, identities); 
                           arrayList[i] = (it.bz.tis.sasabus.html5.shared.ui.ThirdPartyLibrary)(o);                                                
                        }
                     }                                                                   
                  }                                                                   
                  arr.close();        
                  ((it.bz.tis.sasabus.html5.shared.ui.AboutInfos)obj).libraries = arrayList;
               }
            // licenseLabel
            if ((value = structure.property("licenseLabel")) != null)
               if (value.isNull())
                  ((it.bz.tis.sasabus.html5.shared.ui.AboutInfos)obj).licenseLabel = null;
               else
               {
                  ((it.bz.tis.sasabus.html5.shared.ui.AboutInfos)obj).licenseLabel = value.string();
               }
            // licenseName
            if ((value = structure.property("licenseName")) != null)
               if (value.isNull())
                  ((it.bz.tis.sasabus.html5.shared.ui.AboutInfos)obj).licenseName = null;
               else
               {
                  ((it.bz.tis.sasabus.html5.shared.ui.AboutInfos)obj).licenseName = value.string();
               }
            // licenseUrl
            if ((value = structure.property("licenseUrl")) != null)
               if (value.isNull())
                  ((it.bz.tis.sasabus.html5.shared.ui.AboutInfos)obj).licenseUrl = null;
               else
               {
                  ((it.bz.tis.sasabus.html5.shared.ui.AboutInfos)obj).licenseUrl = value.string();
               }
            // teamMembers
            if ((value = structure.property("teamMembers")) != null)
               if (value.isNull())
                  ((it.bz.tis.sasabus.html5.shared.ui.AboutInfos)obj).teamMembers = null;
               else
               {
                  bz.davide.dmxmljson.unmarshalling.Array arr = value.array();        
                  arr.open();        
                  it.bz.tis.sasabus.html5.shared.ui.TeamMember[] arrayList = new it.bz.tis.sasabus.html5.shared.ui.TeamMember[arr.length()];       
                  for (int i = 0; i < arrayList.length; i++) {                       
                     value = arr.nextItem();                                       
                     if (value.isNull())                                           
                        arrayList[i] = null;                                       
                     else                                                          
                     {                                                                   
                        bz.davide.dmxmljson.unmarshalling.Structure tmpStructure = value.structure();
                        String refid = tmpStructure.getRefId();    
                        if (refid != null)                              
                           arrayList[i] = (it.bz.tis.sasabus.html5.shared.ui.TeamMember)(identities.get(refid));                                                
                        else {
                           Object o = newInstance(tmpStructure.getRuntimeClassName("TeamMember"));              
                           internalUnmarschall(tmpStructure, o.getClass().getName(), o, identities); 
                           arrayList[i] = (it.bz.tis.sasabus.html5.shared.ui.TeamMember)(o);                                                
                        }
                     }                                                                   
                  }                                                                   
                  arr.close();        
                  ((it.bz.tis.sasabus.html5.shared.ui.AboutInfos)obj).teamMembers = arrayList;
               }
            // teamName
            if ((value = structure.property("teamName")) != null)
               if (value.isNull())
                  ((it.bz.tis.sasabus.html5.shared.ui.AboutInfos)obj).teamName = null;
               else
               {
                  ((it.bz.tis.sasabus.html5.shared.ui.AboutInfos)obj).teamName = value.string();
               }
            // teamUrl
            if ((value = structure.property("teamUrl")) != null)
               if (value.isNull())
                  ((it.bz.tis.sasabus.html5.shared.ui.AboutInfos)obj).teamUrl = null;
               else
               {
                  ((it.bz.tis.sasabus.html5.shared.ui.AboutInfos)obj).teamUrl = value.string();
               }
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.bz.tis.sasabus.html5.shared.ui.FavouriteBusStationListPanel", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.bz.tis.sasabus.html5.shared.ui.FavouriteBusStationListPanel>() {
         @Override public void check(it.bz.tis.sasabus.html5.shared.ui.FavouriteBusStationListPanel  ret){
            // areaList
            if (ret.areaList != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.FavouriteBusStationListPanel.areaList");
            // custom
            if (ret.custom != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.FavouriteBusStationListPanel.custom");
            // map
            if (ret.map != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.FavouriteBusStationListPanel.map");
            // navigationPanel
            if (ret.navigationPanel != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.FavouriteBusStationListPanel.navigationPanel");
            // parentPanel
            if (ret.parentPanel != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.FavouriteBusStationListPanel.parentPanel");
         }
      });
      this.putInstanceFactory("it.bz.tis.sasabus.html5.shared.ui.FavouriteBusStationListPanel", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.bz.tis.sasabus.html5.shared.ui.FavouriteBusStationListPanel ret = new it.bz.tis.sasabus.html5.shared.ui.FavouriteBusStationListPanel();
            return ret;
         }
      });

      this.putClassUnmarshaller("it.bz.tis.sasabus.html5.shared.ui.FavouriteBusStationListPanel", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            internalUnmarschall(structure, "bz.davide.dmweb.shared.view.DivView", obj, identities);
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            // areaList
            if ((value = structure.property("areaList")) != null)
               if (value.isNull())
                  ((it.bz.tis.sasabus.html5.shared.ui.FavouriteBusStationListPanel)obj).areaList = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((it.bz.tis.sasabus.html5.shared.ui.FavouriteBusStationListPanel)obj).areaList = (it.bz.tis.sasabus.backend.shared.AreaList)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("AreaList"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((it.bz.tis.sasabus.html5.shared.ui.FavouriteBusStationListPanel)obj).areaList = (it.bz.tis.sasabus.backend.shared.AreaList)o;
                  }
               }
            // custom
            if ((value = structure.property("custom")) != null)
               if (value.isNull())
                  ((it.bz.tis.sasabus.html5.shared.ui.FavouriteBusStationListPanel)obj).custom = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((it.bz.tis.sasabus.html5.shared.ui.FavouriteBusStationListPanel)obj).custom = (it.bz.tis.sasabus.html5.shared.BusStationCustomViewAndI18N)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("BusStationCustomViewAndI18N"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((it.bz.tis.sasabus.html5.shared.ui.FavouriteBusStationListPanel)obj).custom = (it.bz.tis.sasabus.html5.shared.BusStationCustomViewAndI18N)o;
                  }
               }
            // map
            if ((value = structure.property("map")) != null)
               if (value.isNull())
                  ((it.bz.tis.sasabus.html5.shared.ui.FavouriteBusStationListPanel)obj).map = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((it.bz.tis.sasabus.html5.shared.ui.FavouriteBusStationListPanel)obj).map = (it.bz.tis.sasabus.html5.shared.ui.map.SASAbusMap)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("SASAbusMap"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((it.bz.tis.sasabus.html5.shared.ui.FavouriteBusStationListPanel)obj).map = (it.bz.tis.sasabus.html5.shared.ui.map.SASAbusMap)o;
                  }
               }
            // navigationPanel
            if ((value = structure.property("navigationPanel")) != null)
               if (value.isNull())
                  ((it.bz.tis.sasabus.html5.shared.ui.FavouriteBusStationListPanel)obj).navigationPanel = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((it.bz.tis.sasabus.html5.shared.ui.FavouriteBusStationListPanel)obj).navigationPanel = (bz.davide.dmweb.shared.view.DMHashNavigationPanel)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("DMHashNavigationPanel"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((it.bz.tis.sasabus.html5.shared.ui.FavouriteBusStationListPanel)obj).navigationPanel = (bz.davide.dmweb.shared.view.DMHashNavigationPanel)o;
                  }
               }
            // parentPanel
            if ((value = structure.property("parentPanel")) != null)
               if (value.isNull())
                  ((it.bz.tis.sasabus.html5.shared.ui.FavouriteBusStationListPanel)obj).parentPanel = null;
               else
               {
                  ((it.bz.tis.sasabus.html5.shared.ui.FavouriteBusStationListPanel)obj).parentPanel = value.string();
               }
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.bz.tis.sasabus.html5.shared.ui.ThirdPartyLibrary", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.bz.tis.sasabus.html5.shared.ui.ThirdPartyLibrary>() {
         @Override public void check(it.bz.tis.sasabus.html5.shared.ui.ThirdPartyLibrary  ret){
            // license
            if (ret.license != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.ThirdPartyLibrary.license");
            // licenseUrl
            if (ret.licenseUrl != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.ThirdPartyLibrary.licenseUrl");
            // name
            if (ret.name != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.ThirdPartyLibrary.name");
            // owner
            if (ret.owner != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.ThirdPartyLibrary.owner");
            // url
            if (ret.url != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.ThirdPartyLibrary.url");
         }
      });
      this.putInstanceFactory("it.bz.tis.sasabus.html5.shared.ui.ThirdPartyLibrary", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.bz.tis.sasabus.html5.shared.ui.ThirdPartyLibrary ret = new it.bz.tis.sasabus.html5.shared.ui.ThirdPartyLibrary();
            return ret;
         }
      });

      this.putClassUnmarshaller("it.bz.tis.sasabus.html5.shared.ui.ThirdPartyLibrary", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            // license
            if ((value = structure.property("license")) != null)
               if (value.isNull())
                  ((it.bz.tis.sasabus.html5.shared.ui.ThirdPartyLibrary)obj).license = null;
               else
               {
                  ((it.bz.tis.sasabus.html5.shared.ui.ThirdPartyLibrary)obj).license = value.string();
               }
            // licenseUrl
            if ((value = structure.property("licenseUrl")) != null)
               if (value.isNull())
                  ((it.bz.tis.sasabus.html5.shared.ui.ThirdPartyLibrary)obj).licenseUrl = null;
               else
               {
                  ((it.bz.tis.sasabus.html5.shared.ui.ThirdPartyLibrary)obj).licenseUrl = value.string();
               }
            // name
            if ((value = structure.property("name")) != null)
               if (value.isNull())
                  ((it.bz.tis.sasabus.html5.shared.ui.ThirdPartyLibrary)obj).name = null;
               else
               {
                  ((it.bz.tis.sasabus.html5.shared.ui.ThirdPartyLibrary)obj).name = value.string();
               }
            // owner
            if ((value = structure.property("owner")) != null)
               if (value.isNull())
                  ((it.bz.tis.sasabus.html5.shared.ui.ThirdPartyLibrary)obj).owner = null;
               else
               {
                  ((it.bz.tis.sasabus.html5.shared.ui.ThirdPartyLibrary)obj).owner = value.string();
               }
            // url
            if ((value = structure.property("url")) != null)
               if (value.isNull())
                  ((it.bz.tis.sasabus.html5.shared.ui.ThirdPartyLibrary)obj).url = null;
               else
               {
                  ((it.bz.tis.sasabus.html5.shared.ui.ThirdPartyLibrary)obj).url = value.string();
               }
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.bz.tis.sasabus.html5.shared.ui.TeamMember", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.bz.tis.sasabus.html5.shared.ui.TeamMember>() {
         @Override public void check(it.bz.tis.sasabus.html5.shared.ui.TeamMember  ret){
            // name
            if (ret.name != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.TeamMember.name");
            // role
            if (ret.role != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.TeamMember.role");
            // url
            if (ret.url != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.TeamMember.url");
         }
      });
      this.putInstanceFactory("it.bz.tis.sasabus.html5.shared.ui.TeamMember", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.bz.tis.sasabus.html5.shared.ui.TeamMember ret = new it.bz.tis.sasabus.html5.shared.ui.TeamMember();
            return ret;
         }
      });

      this.putClassUnmarshaller("it.bz.tis.sasabus.html5.shared.ui.TeamMember", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            // name
            if ((value = structure.property("name")) != null)
               if (value.isNull())
                  ((it.bz.tis.sasabus.html5.shared.ui.TeamMember)obj).name = null;
               else
               {
                  ((it.bz.tis.sasabus.html5.shared.ui.TeamMember)obj).name = value.string();
               }
            // role
            if ((value = structure.property("role")) != null)
               if (value.isNull())
                  ((it.bz.tis.sasabus.html5.shared.ui.TeamMember)obj).role = null;
               else
               {
                  ((it.bz.tis.sasabus.html5.shared.ui.TeamMember)obj).role = value.string();
               }
            // url
            if ((value = structure.property("url")) != null)
               if (value.isNull())
                  ((it.bz.tis.sasabus.html5.shared.ui.TeamMember)obj).url = null;
               else
               {
                  ((it.bz.tis.sasabus.html5.shared.ui.TeamMember)obj).url = value.string();
               }
            structure.close();
         }
      });

   }
}
