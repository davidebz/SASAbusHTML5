/*********************************************************************************
 *                                                                               *
 * WARNING: File automatically generated by DMXmlJson. DON'T CHANGE IT manually! *
 *                                                                               *
 *********************************************************************************/

package it.bz.tis.sasabus.html5.shared.ui.icon;


public class SASAbusWidgetUnmarshaller_Helper extends it.bz.tis.sasabus.html5.shared.SASAbusWidgetUnmarshaller_Helper
{
   protected SASAbusWidgetUnmarshaller_Helper()
   {
      this.emptyObjectCheck.put("it.bz.tis.sasabus.html5.shared.ui.icon.SearchIcon", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.bz.tis.sasabus.html5.shared.ui.icon.SearchIcon>() {
         @Override public void check(it.bz.tis.sasabus.html5.shared.ui.icon.SearchIcon  ret){
            emptyObjectCheck.get("it.bz.tis.sasabus.html5.shared.ui.icon.Icon").check(ret);
         }
      });
      this.putInstanceFactory("it.bz.tis.sasabus.html5.shared.ui.icon.SearchIcon", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.bz.tis.sasabus.html5.shared.ui.icon.SearchIcon ret = new it.bz.tis.sasabus.html5.shared.ui.icon.SearchIcon();
            emptyObjectCheck.get("it.bz.tis.sasabus.html5.shared.ui.icon.SearchIcon").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.bz.tis.sasabus.html5.shared.ui.icon.SearchIcon", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            internalUnmarschall(structure, "it.bz.tis.sasabus.html5.shared.ui.icon.Icon", obj, identities);
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.bz.tis.sasabus.html5.shared.ui.icon.BusIcon", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.bz.tis.sasabus.html5.shared.ui.icon.BusIcon>() {
         @Override public void check(it.bz.tis.sasabus.html5.shared.ui.icon.BusIcon  ret){
            emptyObjectCheck.get("it.bz.tis.sasabus.html5.shared.ui.icon.Icon").check(ret);
         }
      });
      this.putInstanceFactory("it.bz.tis.sasabus.html5.shared.ui.icon.BusIcon", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.bz.tis.sasabus.html5.shared.ui.icon.BusIcon ret = new it.bz.tis.sasabus.html5.shared.ui.icon.BusIcon();
            emptyObjectCheck.get("it.bz.tis.sasabus.html5.shared.ui.icon.BusIcon").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.bz.tis.sasabus.html5.shared.ui.icon.BusIcon", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            internalUnmarschall(structure, "it.bz.tis.sasabus.html5.shared.ui.icon.Icon", obj, identities);
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.bz.tis.sasabus.html5.shared.ui.icon.RouteIcon", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.bz.tis.sasabus.html5.shared.ui.icon.RouteIcon>() {
         @Override public void check(it.bz.tis.sasabus.html5.shared.ui.icon.RouteIcon  ret){
            emptyObjectCheck.get("it.bz.tis.sasabus.html5.shared.ui.icon.Icon").check(ret);
         }
      });
      this.putInstanceFactory("it.bz.tis.sasabus.html5.shared.ui.icon.RouteIcon", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.bz.tis.sasabus.html5.shared.ui.icon.RouteIcon ret = new it.bz.tis.sasabus.html5.shared.ui.icon.RouteIcon();
            emptyObjectCheck.get("it.bz.tis.sasabus.html5.shared.ui.icon.RouteIcon").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.bz.tis.sasabus.html5.shared.ui.icon.RouteIcon", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            internalUnmarschall(structure, "it.bz.tis.sasabus.html5.shared.ui.icon.Icon", obj, identities);
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.bz.tis.sasabus.html5.shared.ui.icon.MenuIcon", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.bz.tis.sasabus.html5.shared.ui.icon.MenuIcon>() {
         @Override public void check(it.bz.tis.sasabus.html5.shared.ui.icon.MenuIcon  ret){
            emptyObjectCheck.get("it.bz.tis.sasabus.html5.shared.ui.icon.Icon").check(ret);
         }
      });
      this.putInstanceFactory("it.bz.tis.sasabus.html5.shared.ui.icon.MenuIcon", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.bz.tis.sasabus.html5.shared.ui.icon.MenuIcon ret = new it.bz.tis.sasabus.html5.shared.ui.icon.MenuIcon();
            emptyObjectCheck.get("it.bz.tis.sasabus.html5.shared.ui.icon.MenuIcon").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.bz.tis.sasabus.html5.shared.ui.icon.MenuIcon", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            internalUnmarschall(structure, "it.bz.tis.sasabus.html5.shared.ui.icon.Icon", obj, identities);
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.bz.tis.sasabus.html5.shared.ui.icon.LogoIcon", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.bz.tis.sasabus.html5.shared.ui.icon.LogoIcon>() {
         @Override public void check(it.bz.tis.sasabus.html5.shared.ui.icon.LogoIcon  ret){
            emptyObjectCheck.get("it.bz.tis.sasabus.html5.shared.ui.icon.Icon").check(ret);
         }
      });
      this.putInstanceFactory("it.bz.tis.sasabus.html5.shared.ui.icon.LogoIcon", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.bz.tis.sasabus.html5.shared.ui.icon.LogoIcon ret = new it.bz.tis.sasabus.html5.shared.ui.icon.LogoIcon();
            emptyObjectCheck.get("it.bz.tis.sasabus.html5.shared.ui.icon.LogoIcon").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.bz.tis.sasabus.html5.shared.ui.icon.LogoIcon", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            internalUnmarschall(structure, "it.bz.tis.sasabus.html5.shared.ui.icon.Icon", obj, identities);
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.bz.tis.sasabus.html5.shared.ui.icon.MapIcon", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.bz.tis.sasabus.html5.shared.ui.icon.MapIcon>() {
         @Override public void check(it.bz.tis.sasabus.html5.shared.ui.icon.MapIcon  ret){
            emptyObjectCheck.get("it.bz.tis.sasabus.html5.shared.ui.icon.Icon").check(ret);
         }
      });
      this.putInstanceFactory("it.bz.tis.sasabus.html5.shared.ui.icon.MapIcon", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.bz.tis.sasabus.html5.shared.ui.icon.MapIcon ret = new it.bz.tis.sasabus.html5.shared.ui.icon.MapIcon();
            emptyObjectCheck.get("it.bz.tis.sasabus.html5.shared.ui.icon.MapIcon").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.bz.tis.sasabus.html5.shared.ui.icon.MapIcon", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            internalUnmarschall(structure, "it.bz.tis.sasabus.html5.shared.ui.icon.Icon", obj, identities);
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.bz.tis.sasabus.html5.shared.ui.icon.MoreIcon", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.bz.tis.sasabus.html5.shared.ui.icon.MoreIcon>() {
         @Override public void check(it.bz.tis.sasabus.html5.shared.ui.icon.MoreIcon  ret){
            emptyObjectCheck.get("it.bz.tis.sasabus.html5.shared.ui.icon.Icon").check(ret);
         }
      });
      this.putInstanceFactory("it.bz.tis.sasabus.html5.shared.ui.icon.MoreIcon", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.bz.tis.sasabus.html5.shared.ui.icon.MoreIcon ret = new it.bz.tis.sasabus.html5.shared.ui.icon.MoreIcon();
            emptyObjectCheck.get("it.bz.tis.sasabus.html5.shared.ui.icon.MoreIcon").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.bz.tis.sasabus.html5.shared.ui.icon.MoreIcon", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            internalUnmarschall(structure, "it.bz.tis.sasabus.html5.shared.ui.icon.Icon", obj, identities);
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.bz.tis.sasabus.html5.shared.ui.icon.TrainIcon", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.bz.tis.sasabus.html5.shared.ui.icon.TrainIcon>() {
         @Override public void check(it.bz.tis.sasabus.html5.shared.ui.icon.TrainIcon  ret){
            emptyObjectCheck.get("it.bz.tis.sasabus.html5.shared.ui.icon.Icon").check(ret);
         }
      });
      this.putInstanceFactory("it.bz.tis.sasabus.html5.shared.ui.icon.TrainIcon", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.bz.tis.sasabus.html5.shared.ui.icon.TrainIcon ret = new it.bz.tis.sasabus.html5.shared.ui.icon.TrainIcon();
            emptyObjectCheck.get("it.bz.tis.sasabus.html5.shared.ui.icon.TrainIcon").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.bz.tis.sasabus.html5.shared.ui.icon.TrainIcon", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            internalUnmarschall(structure, "it.bz.tis.sasabus.html5.shared.ui.icon.Icon", obj, identities);
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.bz.tis.sasabus.html5.shared.ui.icon.ParkingIcon", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.bz.tis.sasabus.html5.shared.ui.icon.ParkingIcon>() {
         @Override public void check(it.bz.tis.sasabus.html5.shared.ui.icon.ParkingIcon  ret){
            emptyObjectCheck.get("it.bz.tis.sasabus.html5.shared.ui.icon.Icon").check(ret);
         }
      });
      this.putInstanceFactory("it.bz.tis.sasabus.html5.shared.ui.icon.ParkingIcon", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.bz.tis.sasabus.html5.shared.ui.icon.ParkingIcon ret = new it.bz.tis.sasabus.html5.shared.ui.icon.ParkingIcon();
            emptyObjectCheck.get("it.bz.tis.sasabus.html5.shared.ui.icon.ParkingIcon").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.bz.tis.sasabus.html5.shared.ui.icon.ParkingIcon", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            internalUnmarschall(structure, "it.bz.tis.sasabus.html5.shared.ui.icon.Icon", obj, identities);
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.bz.tis.sasabus.html5.shared.ui.icon.FavouritesIcon", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.bz.tis.sasabus.html5.shared.ui.icon.FavouritesIcon>() {
         @Override public void check(it.bz.tis.sasabus.html5.shared.ui.icon.FavouritesIcon  ret){
            emptyObjectCheck.get("it.bz.tis.sasabus.html5.shared.ui.icon.Icon").check(ret);
         }
      });
      this.putInstanceFactory("it.bz.tis.sasabus.html5.shared.ui.icon.FavouritesIcon", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.bz.tis.sasabus.html5.shared.ui.icon.FavouritesIcon ret = new it.bz.tis.sasabus.html5.shared.ui.icon.FavouritesIcon();
            emptyObjectCheck.get("it.bz.tis.sasabus.html5.shared.ui.icon.FavouritesIcon").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.bz.tis.sasabus.html5.shared.ui.icon.FavouritesIcon", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            internalUnmarschall(structure, "it.bz.tis.sasabus.html5.shared.ui.icon.Icon", obj, identities);
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.bz.tis.sasabus.html5.shared.ui.icon.FavouritesActiveIcon", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.bz.tis.sasabus.html5.shared.ui.icon.FavouritesActiveIcon>() {
         @Override public void check(it.bz.tis.sasabus.html5.shared.ui.icon.FavouritesActiveIcon  ret){
            emptyObjectCheck.get("it.bz.tis.sasabus.html5.shared.ui.icon.Icon").check(ret);
         }
      });
      this.putInstanceFactory("it.bz.tis.sasabus.html5.shared.ui.icon.FavouritesActiveIcon", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.bz.tis.sasabus.html5.shared.ui.icon.FavouritesActiveIcon ret = new it.bz.tis.sasabus.html5.shared.ui.icon.FavouritesActiveIcon();
            emptyObjectCheck.get("it.bz.tis.sasabus.html5.shared.ui.icon.FavouritesActiveIcon").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.bz.tis.sasabus.html5.shared.ui.icon.FavouritesActiveIcon", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            internalUnmarschall(structure, "it.bz.tis.sasabus.html5.shared.ui.icon.Icon", obj, identities);
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.bz.tis.sasabus.html5.shared.ui.icon.TreeIcon", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.bz.tis.sasabus.html5.shared.ui.icon.TreeIcon>() {
         @Override public void check(it.bz.tis.sasabus.html5.shared.ui.icon.TreeIcon  ret){
            emptyObjectCheck.get("it.bz.tis.sasabus.html5.shared.ui.icon.Icon").check(ret);
         }
      });
      this.putInstanceFactory("it.bz.tis.sasabus.html5.shared.ui.icon.TreeIcon", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.bz.tis.sasabus.html5.shared.ui.icon.TreeIcon ret = new it.bz.tis.sasabus.html5.shared.ui.icon.TreeIcon();
            emptyObjectCheck.get("it.bz.tis.sasabus.html5.shared.ui.icon.TreeIcon").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.bz.tis.sasabus.html5.shared.ui.icon.TreeIcon", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            internalUnmarschall(structure, "it.bz.tis.sasabus.html5.shared.ui.icon.Icon", obj, identities);
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.bz.tis.sasabus.html5.shared.ui.icon.LinesIcon", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.bz.tis.sasabus.html5.shared.ui.icon.LinesIcon>() {
         @Override public void check(it.bz.tis.sasabus.html5.shared.ui.icon.LinesIcon  ret){
            emptyObjectCheck.get("it.bz.tis.sasabus.html5.shared.ui.icon.Icon").check(ret);
         }
      });
      this.putInstanceFactory("it.bz.tis.sasabus.html5.shared.ui.icon.LinesIcon", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.bz.tis.sasabus.html5.shared.ui.icon.LinesIcon ret = new it.bz.tis.sasabus.html5.shared.ui.icon.LinesIcon();
            emptyObjectCheck.get("it.bz.tis.sasabus.html5.shared.ui.icon.LinesIcon").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.bz.tis.sasabus.html5.shared.ui.icon.LinesIcon", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            internalUnmarschall(structure, "it.bz.tis.sasabus.html5.shared.ui.icon.Icon", obj, identities);
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.bz.tis.sasabus.html5.shared.ui.icon.NewsIcon", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.bz.tis.sasabus.html5.shared.ui.icon.NewsIcon>() {
         @Override public void check(it.bz.tis.sasabus.html5.shared.ui.icon.NewsIcon  ret){
            emptyObjectCheck.get("it.bz.tis.sasabus.html5.shared.ui.icon.Icon").check(ret);
         }
      });
      this.putInstanceFactory("it.bz.tis.sasabus.html5.shared.ui.icon.NewsIcon", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.bz.tis.sasabus.html5.shared.ui.icon.NewsIcon ret = new it.bz.tis.sasabus.html5.shared.ui.icon.NewsIcon();
            emptyObjectCheck.get("it.bz.tis.sasabus.html5.shared.ui.icon.NewsIcon").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.bz.tis.sasabus.html5.shared.ui.icon.NewsIcon", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            internalUnmarschall(structure, "it.bz.tis.sasabus.html5.shared.ui.icon.Icon", obj, identities);
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.bz.tis.sasabus.html5.shared.ui.icon.FeedbackIcon", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.bz.tis.sasabus.html5.shared.ui.icon.FeedbackIcon>() {
         @Override public void check(it.bz.tis.sasabus.html5.shared.ui.icon.FeedbackIcon  ret){
            emptyObjectCheck.get("it.bz.tis.sasabus.html5.shared.ui.icon.Icon").check(ret);
         }
      });
      this.putInstanceFactory("it.bz.tis.sasabus.html5.shared.ui.icon.FeedbackIcon", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.bz.tis.sasabus.html5.shared.ui.icon.FeedbackIcon ret = new it.bz.tis.sasabus.html5.shared.ui.icon.FeedbackIcon();
            emptyObjectCheck.get("it.bz.tis.sasabus.html5.shared.ui.icon.FeedbackIcon").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.bz.tis.sasabus.html5.shared.ui.icon.FeedbackIcon", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            internalUnmarschall(structure, "it.bz.tis.sasabus.html5.shared.ui.icon.Icon", obj, identities);
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.bz.tis.sasabus.html5.shared.ui.icon.AboutIcon", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.bz.tis.sasabus.html5.shared.ui.icon.AboutIcon>() {
         @Override public void check(it.bz.tis.sasabus.html5.shared.ui.icon.AboutIcon  ret){
            emptyObjectCheck.get("it.bz.tis.sasabus.html5.shared.ui.icon.Icon").check(ret);
         }
      });
      this.putInstanceFactory("it.bz.tis.sasabus.html5.shared.ui.icon.AboutIcon", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.bz.tis.sasabus.html5.shared.ui.icon.AboutIcon ret = new it.bz.tis.sasabus.html5.shared.ui.icon.AboutIcon();
            emptyObjectCheck.get("it.bz.tis.sasabus.html5.shared.ui.icon.AboutIcon").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.bz.tis.sasabus.html5.shared.ui.icon.AboutIcon", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            internalUnmarschall(structure, "it.bz.tis.sasabus.html5.shared.ui.icon.Icon", obj, identities);
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.bz.tis.sasabus.html5.shared.ui.icon.Icon", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.bz.tis.sasabus.html5.shared.ui.icon.Icon>() {
         @Override public void check(it.bz.tis.sasabus.html5.shared.ui.icon.Icon  ret){
            emptyObjectCheck.get("bz.davide.dmweb.shared.view.ImgView").check(ret);
         }
      });
      this.putInstanceFactory("it.bz.tis.sasabus.html5.shared.ui.icon.Icon", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.bz.tis.sasabus.html5.shared.ui.icon.Icon ret = new it.bz.tis.sasabus.html5.shared.ui.icon.Icon();
            emptyObjectCheck.get("it.bz.tis.sasabus.html5.shared.ui.icon.Icon").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.bz.tis.sasabus.html5.shared.ui.icon.Icon", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            internalUnmarschall(structure, "bz.davide.dmweb.shared.view.ImgView", obj, identities);
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.bz.tis.sasabus.html5.shared.ui.icon.GpsIcon", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.bz.tis.sasabus.html5.shared.ui.icon.GpsIcon>() {
         @Override public void check(it.bz.tis.sasabus.html5.shared.ui.icon.GpsIcon  ret){
            emptyObjectCheck.get("it.bz.tis.sasabus.html5.shared.ui.icon.Icon").check(ret);
         }
      });
      this.putInstanceFactory("it.bz.tis.sasabus.html5.shared.ui.icon.GpsIcon", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.bz.tis.sasabus.html5.shared.ui.icon.GpsIcon ret = new it.bz.tis.sasabus.html5.shared.ui.icon.GpsIcon();
            emptyObjectCheck.get("it.bz.tis.sasabus.html5.shared.ui.icon.GpsIcon").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.bz.tis.sasabus.html5.shared.ui.icon.GpsIcon", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            internalUnmarschall(structure, "it.bz.tis.sasabus.html5.shared.ui.icon.Icon", obj, identities);
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            structure.close();
         }
      });

   }
}
