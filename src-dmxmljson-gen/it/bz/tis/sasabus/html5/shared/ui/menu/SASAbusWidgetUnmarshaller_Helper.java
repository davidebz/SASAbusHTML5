/*********************************************************************************
 *                                                                               *
 * WARNING: File automatically generated by DMXmlJson. DON'T CHANGE IT manually! *
 *                                                                               *
 *********************************************************************************/

package it.bz.tis.sasabus.html5.shared.ui.menu;


public class SASAbusWidgetUnmarshaller_Helper extends bz.davide.dmweb.shared.view.SASAbusWidgetUnmarshaller_Helper
{
   protected SASAbusWidgetUnmarshaller_Helper()
   {
      this.emptyObjectCheck.put("it.bz.tis.sasabus.html5.shared.ui.menu.MenuItem", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.bz.tis.sasabus.html5.shared.ui.menu.MenuItem>() {
         @Override public void check(it.bz.tis.sasabus.html5.shared.ui.menu.MenuItem  ret){
            emptyObjectCheck.get("bz.davide.dmweb.shared.view.DivView").check(ret);
         }
      });
      this.putInstanceFactory("it.bz.tis.sasabus.html5.shared.ui.menu.MenuItem", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.bz.tis.sasabus.html5.shared.ui.menu.MenuItem ret = new it.bz.tis.sasabus.html5.shared.ui.menu.MenuItem();
            emptyObjectCheck.get("it.bz.tis.sasabus.html5.shared.ui.menu.MenuItem").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.bz.tis.sasabus.html5.shared.ui.menu.MenuItem", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            internalUnmarschall(structure, "bz.davide.dmweb.shared.view.DivView", obj, identities);
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.bz.tis.sasabus.html5.shared.ui.menu.MenuAboutClickHandler", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.bz.tis.sasabus.html5.shared.ui.menu.MenuAboutClickHandler>() {
         @Override public void check(it.bz.tis.sasabus.html5.shared.ui.menu.MenuAboutClickHandler  ret){
            // aboutPanel
            if (ret.aboutPanel != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.menu.MenuAboutClickHandler.aboutPanel");
            // menu
            if (ret.menu != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.menu.MenuAboutClickHandler.menu");
         }
      });
      this.putInstanceFactory("it.bz.tis.sasabus.html5.shared.ui.menu.MenuAboutClickHandler", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.bz.tis.sasabus.html5.shared.ui.menu.MenuAboutClickHandler ret = new it.bz.tis.sasabus.html5.shared.ui.menu.MenuAboutClickHandler();
            emptyObjectCheck.get("it.bz.tis.sasabus.html5.shared.ui.menu.MenuAboutClickHandler").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.bz.tis.sasabus.html5.shared.ui.menu.MenuAboutClickHandler", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            // aboutPanel
            if ((value = structure.property("aboutPanel")) != null)
               if (value.isNull())
                  ((MenuAboutClickHandler)obj).aboutPanel = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((MenuAboutClickHandler)obj).aboutPanel = (it.bz.tis.sasabus.html5.shared.ui.AboutPanel)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("AboutPanel"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((MenuAboutClickHandler)obj).aboutPanel = (it.bz.tis.sasabus.html5.shared.ui.AboutPanel)o;
                  }
               }
            // menu
            if ((value = structure.property("menu")) != null)
               if (value.isNull())
                  ((MenuAboutClickHandler)obj).menu = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((MenuAboutClickHandler)obj).menu = (it.bz.tis.sasabus.html5.shared.ui.menu.Menu)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("Menu"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((MenuAboutClickHandler)obj).menu = (it.bz.tis.sasabus.html5.shared.ui.menu.Menu)o;
                  }
               }
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.bz.tis.sasabus.html5.shared.ui.menu.MenuMapClickHandler", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.bz.tis.sasabus.html5.shared.ui.menu.MenuMapClickHandler>() {
         @Override public void check(it.bz.tis.sasabus.html5.shared.ui.menu.MenuMapClickHandler  ret){
            // areaList
            if (ret.areaList != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.menu.MenuMapClickHandler.areaList");
            // map
            if (ret.map != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.menu.MenuMapClickHandler.map");
            // menu
            if (ret.menu != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.menu.MenuMapClickHandler.menu");
            // navigationPanel
            if (ret.navigationPanel != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.menu.MenuMapClickHandler.navigationPanel");
         }
      });
      this.putInstanceFactory("it.bz.tis.sasabus.html5.shared.ui.menu.MenuMapClickHandler", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.bz.tis.sasabus.html5.shared.ui.menu.MenuMapClickHandler ret = new it.bz.tis.sasabus.html5.shared.ui.menu.MenuMapClickHandler();
            emptyObjectCheck.get("it.bz.tis.sasabus.html5.shared.ui.menu.MenuMapClickHandler").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.bz.tis.sasabus.html5.shared.ui.menu.MenuMapClickHandler", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            // areaList
            if ((value = structure.property("areaList")) != null)
               if (value.isNull())
                  ((MenuMapClickHandler)obj).areaList = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((MenuMapClickHandler)obj).areaList = (it.bz.tis.sasabus.backend.shared.AreaList)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("AreaList"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((MenuMapClickHandler)obj).areaList = (it.bz.tis.sasabus.backend.shared.AreaList)o;
                  }
               }
            // map
            if ((value = structure.property("map")) != null)
               if (value.isNull())
                  ((MenuMapClickHandler)obj).map = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((MenuMapClickHandler)obj).map = (it.bz.tis.sasabus.html5.shared.ui.map.SASAbusMap)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("SASAbusMap"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((MenuMapClickHandler)obj).map = (it.bz.tis.sasabus.html5.shared.ui.map.SASAbusMap)o;
                  }
               }
            // menu
            if ((value = structure.property("menu")) != null)
               if (value.isNull())
                  ((MenuMapClickHandler)obj).menu = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((MenuMapClickHandler)obj).menu = (it.bz.tis.sasabus.html5.shared.ui.menu.Menu)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("Menu"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((MenuMapClickHandler)obj).menu = (it.bz.tis.sasabus.html5.shared.ui.menu.Menu)o;
                  }
               }
            // navigationPanel
            if ((value = structure.property("navigationPanel")) != null)
               if (value.isNull())
                  ((MenuMapClickHandler)obj).navigationPanel = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((MenuMapClickHandler)obj).navigationPanel = (bz.davide.dmweb.shared.view.DMHashNavigationPanel)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("DMHashNavigationPanel"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((MenuMapClickHandler)obj).navigationPanel = (bz.davide.dmweb.shared.view.DMHashNavigationPanel)o;
                  }
               }
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.bz.tis.sasabus.html5.shared.ui.menu.MenuNewsClickHandler", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.bz.tis.sasabus.html5.shared.ui.menu.MenuNewsClickHandler>() {
         @Override public void check(it.bz.tis.sasabus.html5.shared.ui.menu.MenuNewsClickHandler  ret){
            // menu
            if (ret.menu != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.menu.MenuNewsClickHandler.menu");
            // navigationPanel
            if (ret.navigationPanel != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.menu.MenuNewsClickHandler.navigationPanel");
         }
      });
      this.putInstanceFactory("it.bz.tis.sasabus.html5.shared.ui.menu.MenuNewsClickHandler", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.bz.tis.sasabus.html5.shared.ui.menu.MenuNewsClickHandler ret = new it.bz.tis.sasabus.html5.shared.ui.menu.MenuNewsClickHandler();
            emptyObjectCheck.get("it.bz.tis.sasabus.html5.shared.ui.menu.MenuNewsClickHandler").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.bz.tis.sasabus.html5.shared.ui.menu.MenuNewsClickHandler", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            // menu
            if ((value = structure.property("menu")) != null)
               if (value.isNull())
                  ((MenuNewsClickHandler)obj).menu = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((MenuNewsClickHandler)obj).menu = (it.bz.tis.sasabus.html5.shared.ui.menu.Menu)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("Menu"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((MenuNewsClickHandler)obj).menu = (it.bz.tis.sasabus.html5.shared.ui.menu.Menu)o;
                  }
               }
            // navigationPanel
            if ((value = structure.property("navigationPanel")) != null)
               if (value.isNull())
                  ((MenuNewsClickHandler)obj).navigationPanel = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((MenuNewsClickHandler)obj).navigationPanel = (bz.davide.dmweb.shared.view.DMHashNavigationPanel)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("DMHashNavigationPanel"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((MenuNewsClickHandler)obj).navigationPanel = (bz.davide.dmweb.shared.view.DMHashNavigationPanel)o;
                  }
               }
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.bz.tis.sasabus.html5.shared.ui.menu.MenuAreaLinesClickHandler", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.bz.tis.sasabus.html5.shared.ui.menu.MenuAreaLinesClickHandler>() {
         @Override public void check(it.bz.tis.sasabus.html5.shared.ui.menu.MenuAreaLinesClickHandler  ret){
            // areaList
            if (ret.areaList != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.menu.MenuAreaLinesClickHandler.areaList");
            // map
            if (ret.map != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.menu.MenuAreaLinesClickHandler.map");
            // menu
            if (ret.menu != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.menu.MenuAreaLinesClickHandler.menu");
            // navigationPanel
            if (ret.navigationPanel != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.menu.MenuAreaLinesClickHandler.navigationPanel");
         }
      });
      this.putInstanceFactory("it.bz.tis.sasabus.html5.shared.ui.menu.MenuAreaLinesClickHandler", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.bz.tis.sasabus.html5.shared.ui.menu.MenuAreaLinesClickHandler ret = new it.bz.tis.sasabus.html5.shared.ui.menu.MenuAreaLinesClickHandler();
            emptyObjectCheck.get("it.bz.tis.sasabus.html5.shared.ui.menu.MenuAreaLinesClickHandler").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.bz.tis.sasabus.html5.shared.ui.menu.MenuAreaLinesClickHandler", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            // areaList
            if ((value = structure.property("areaList")) != null)
               if (value.isNull())
                  ((MenuAreaLinesClickHandler)obj).areaList = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((MenuAreaLinesClickHandler)obj).areaList = (it.bz.tis.sasabus.backend.shared.AreaList)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("AreaList"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((MenuAreaLinesClickHandler)obj).areaList = (it.bz.tis.sasabus.backend.shared.AreaList)o;
                  }
               }
            // map
            if ((value = structure.property("map")) != null)
               if (value.isNull())
                  ((MenuAreaLinesClickHandler)obj).map = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((MenuAreaLinesClickHandler)obj).map = (it.bz.tis.sasabus.html5.shared.ui.map.SASAbusMap)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("SASAbusMap"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((MenuAreaLinesClickHandler)obj).map = (it.bz.tis.sasabus.html5.shared.ui.map.SASAbusMap)o;
                  }
               }
            // menu
            if ((value = structure.property("menu")) != null)
               if (value.isNull())
                  ((MenuAreaLinesClickHandler)obj).menu = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((MenuAreaLinesClickHandler)obj).menu = (it.bz.tis.sasabus.html5.shared.ui.menu.Menu)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("Menu"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((MenuAreaLinesClickHandler)obj).menu = (it.bz.tis.sasabus.html5.shared.ui.menu.Menu)o;
                  }
               }
            // navigationPanel
            if ((value = structure.property("navigationPanel")) != null)
               if (value.isNull())
                  ((MenuAreaLinesClickHandler)obj).navigationPanel = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((MenuAreaLinesClickHandler)obj).navigationPanel = (bz.davide.dmweb.shared.view.DMHashNavigationPanel)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("DMHashNavigationPanel"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((MenuAreaLinesClickHandler)obj).navigationPanel = (bz.davide.dmweb.shared.view.DMHashNavigationPanel)o;
                  }
               }
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.bz.tis.sasabus.html5.shared.ui.menu.MenuSettingsClickHandler", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.bz.tis.sasabus.html5.shared.ui.menu.MenuSettingsClickHandler>() {
         @Override public void check(it.bz.tis.sasabus.html5.shared.ui.menu.MenuSettingsClickHandler  ret){
            // menu
            if (ret.menu != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.menu.MenuSettingsClickHandler.menu");
            // navigationPanel
            if (ret.navigationPanel != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.menu.MenuSettingsClickHandler.navigationPanel");
         }
      });
      this.putInstanceFactory("it.bz.tis.sasabus.html5.shared.ui.menu.MenuSettingsClickHandler", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.bz.tis.sasabus.html5.shared.ui.menu.MenuSettingsClickHandler ret = new it.bz.tis.sasabus.html5.shared.ui.menu.MenuSettingsClickHandler();
            emptyObjectCheck.get("it.bz.tis.sasabus.html5.shared.ui.menu.MenuSettingsClickHandler").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.bz.tis.sasabus.html5.shared.ui.menu.MenuSettingsClickHandler", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            // menu
            if ((value = structure.property("menu")) != null)
               if (value.isNull())
                  ((MenuSettingsClickHandler)obj).menu = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((MenuSettingsClickHandler)obj).menu = (it.bz.tis.sasabus.html5.shared.ui.menu.Menu)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("Menu"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((MenuSettingsClickHandler)obj).menu = (it.bz.tis.sasabus.html5.shared.ui.menu.Menu)o;
                  }
               }
            // navigationPanel
            if ((value = structure.property("navigationPanel")) != null)
               if (value.isNull())
                  ((MenuSettingsClickHandler)obj).navigationPanel = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((MenuSettingsClickHandler)obj).navigationPanel = (bz.davide.dmweb.shared.view.DMHashNavigationPanel)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("DMHashNavigationPanel"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((MenuSettingsClickHandler)obj).navigationPanel = (bz.davide.dmweb.shared.view.DMHashNavigationPanel)o;
                  }
               }
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.bz.tis.sasabus.html5.shared.ui.menu.Menu", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.bz.tis.sasabus.html5.shared.ui.menu.Menu>() {
         @Override public void check(it.bz.tis.sasabus.html5.shared.ui.menu.Menu  ret){
            // about
            if (ret.about != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.menu.Menu.about");
            // aboutPanel
            if (ret.aboutPanel != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.menu.Menu.aboutPanel");
            // areasAndLine
            if (ret.areasAndLine != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.menu.Menu.areasAndLine");
            // favourites
            if (ret.favourites != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.menu.Menu.favourites");
            // map
            if (ret.map != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.menu.Menu.map");
            // mapItem
            if (ret.mapItem != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.menu.Menu.mapItem");
            // menuOpen
            if (ret.menuOpen != false)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.menu.Menu.menuOpen");
            // more
            if (ret.more != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.menu.Menu.more");
            // moreClickHandler
            if (ret.moreClickHandler != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.menu.Menu.moreClickHandler");
            // moreMenuItems
            if (ret.moreMenuItems != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.menu.Menu.moreMenuItems");
            // navigationPanel
            if (ret.navigationPanel != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.menu.Menu.navigationPanel");
            // news
            if (ret.news != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.menu.Menu.news");
            // parkings
            if (ret.parkings != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.menu.Menu.parkings");
            // search
            if (ret.search != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.menu.Menu.search");
            // sendFeedback
            if (ret.sendFeedback != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.menu.Menu.sendFeedback");
            // train
            if (ret.train != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.menu.Menu.train");
            emptyObjectCheck.get("bz.davide.dmweb.shared.view.DivView").check(ret);
         }
      });
      this.putInstanceFactory("it.bz.tis.sasabus.html5.shared.ui.menu.Menu", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.bz.tis.sasabus.html5.shared.ui.menu.Menu ret = new it.bz.tis.sasabus.html5.shared.ui.menu.Menu();
            emptyObjectCheck.get("it.bz.tis.sasabus.html5.shared.ui.menu.Menu").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.bz.tis.sasabus.html5.shared.ui.menu.Menu", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            internalUnmarschall(structure, "bz.davide.dmweb.shared.view.DivView", obj, identities);
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            // about
            if ((value = structure.property("about")) != null)
               if (value.isNull())
                  ((Menu)obj).about = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((Menu)obj).about = (it.bz.tis.sasabus.html5.shared.ui.menu.MenuItem)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("MenuItem"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((Menu)obj).about = (it.bz.tis.sasabus.html5.shared.ui.menu.MenuItem)o;
                  }
               }
            // aboutPanel
            if ((value = structure.property("aboutPanel")) != null)
               if (value.isNull())
                  ((Menu)obj).aboutPanel = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((Menu)obj).aboutPanel = (it.bz.tis.sasabus.html5.shared.ui.AboutPanel)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("AboutPanel"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((Menu)obj).aboutPanel = (it.bz.tis.sasabus.html5.shared.ui.AboutPanel)o;
                  }
               }
            // areasAndLine
            if ((value = structure.property("areasAndLine")) != null)
               if (value.isNull())
                  ((Menu)obj).areasAndLine = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((Menu)obj).areasAndLine = (it.bz.tis.sasabus.html5.shared.ui.menu.MenuItem)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("MenuItem"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((Menu)obj).areasAndLine = (it.bz.tis.sasabus.html5.shared.ui.menu.MenuItem)o;
                  }
               }
            // favourites
            if ((value = structure.property("favourites")) != null)
               if (value.isNull())
                  ((Menu)obj).favourites = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((Menu)obj).favourites = (it.bz.tis.sasabus.html5.shared.ui.menu.MenuItem)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("MenuItem"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((Menu)obj).favourites = (it.bz.tis.sasabus.html5.shared.ui.menu.MenuItem)o;
                  }
               }
            // map
            if ((value = structure.property("map")) != null)
               if (value.isNull())
                  ((Menu)obj).map = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((Menu)obj).map = (it.bz.tis.sasabus.html5.shared.ui.map.SASAbusMap)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("SASAbusMap"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((Menu)obj).map = (it.bz.tis.sasabus.html5.shared.ui.map.SASAbusMap)o;
                  }
               }
            // mapItem
            if ((value = structure.property("mapItem")) != null)
               if (value.isNull())
                  ((Menu)obj).mapItem = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((Menu)obj).mapItem = (it.bz.tis.sasabus.html5.shared.ui.menu.MenuItem)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("MenuItem"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((Menu)obj).mapItem = (it.bz.tis.sasabus.html5.shared.ui.menu.MenuItem)o;
                  }
               }
            // menuOpen
            if ((value = structure.property("menuOpen")) != null)
               if (value.isNull())
                  new RuntimeException("Impossibile value for primitive type");
               else
               {
                  ((Menu)obj).menuOpen = value.booleanValue();
               }
            // more
            if ((value = structure.property("more")) != null)
               if (value.isNull())
                  ((Menu)obj).more = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((Menu)obj).more = (it.bz.tis.sasabus.html5.shared.ui.menu.MenuItem)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("MenuItem"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((Menu)obj).more = (it.bz.tis.sasabus.html5.shared.ui.menu.MenuItem)o;
                  }
               }
            // moreClickHandler
            if ((value = structure.property("moreClickHandler")) != null)
               if (value.isNull())
                  ((Menu)obj).moreClickHandler = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((Menu)obj).moreClickHandler = (it.bz.tis.sasabus.html5.shared.ui.menu.MenuMoreClickHandler)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("MenuMoreClickHandler"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((Menu)obj).moreClickHandler = (it.bz.tis.sasabus.html5.shared.ui.menu.MenuMoreClickHandler)o;
                  }
               }
            // moreMenuItems
            if ((value = structure.property("moreMenuItems")) != null)
               if (value.isNull())
                  ((Menu)obj).moreMenuItems = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((Menu)obj).moreMenuItems = (bz.davide.dmweb.shared.view.DivView)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("DivView"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((Menu)obj).moreMenuItems = (bz.davide.dmweb.shared.view.DivView)o;
                  }
               }
            // navigationPanel
            if ((value = structure.property("navigationPanel")) != null)
               if (value.isNull())
                  ((Menu)obj).navigationPanel = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((Menu)obj).navigationPanel = (bz.davide.dmweb.shared.view.DMHashNavigationPanel)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("DMHashNavigationPanel"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((Menu)obj).navigationPanel = (bz.davide.dmweb.shared.view.DMHashNavigationPanel)o;
                  }
               }
            // news
            if ((value = structure.property("news")) != null)
               if (value.isNull())
                  ((Menu)obj).news = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((Menu)obj).news = (it.bz.tis.sasabus.html5.shared.ui.menu.MenuItem)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("MenuItem"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((Menu)obj).news = (it.bz.tis.sasabus.html5.shared.ui.menu.MenuItem)o;
                  }
               }
            // parkings
            if ((value = structure.property("parkings")) != null)
               if (value.isNull())
                  ((Menu)obj).parkings = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((Menu)obj).parkings = (it.bz.tis.sasabus.html5.shared.ui.menu.MenuItem)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("MenuItem"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((Menu)obj).parkings = (it.bz.tis.sasabus.html5.shared.ui.menu.MenuItem)o;
                  }
               }
            // search
            if ((value = structure.property("search")) != null)
               if (value.isNull())
                  ((Menu)obj).search = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((Menu)obj).search = (it.bz.tis.sasabus.html5.shared.ui.menu.MenuItem)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("MenuItem"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((Menu)obj).search = (it.bz.tis.sasabus.html5.shared.ui.menu.MenuItem)o;
                  }
               }
            // sendFeedback
            if ((value = structure.property("sendFeedback")) != null)
               if (value.isNull())
                  ((Menu)obj).sendFeedback = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((Menu)obj).sendFeedback = (it.bz.tis.sasabus.html5.shared.ui.menu.MenuItem)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("MenuItem"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((Menu)obj).sendFeedback = (it.bz.tis.sasabus.html5.shared.ui.menu.MenuItem)o;
                  }
               }
            // train
            if ((value = structure.property("train")) != null)
               if (value.isNull())
                  ((Menu)obj).train = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((Menu)obj).train = (it.bz.tis.sasabus.html5.shared.ui.menu.MenuItem)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("MenuItem"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((Menu)obj).train = (it.bz.tis.sasabus.html5.shared.ui.menu.MenuItem)o;
                  }
               }
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.bz.tis.sasabus.html5.shared.ui.menu.MenuMoreClickHandler", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.bz.tis.sasabus.html5.shared.ui.menu.MenuMoreClickHandler>() {
         @Override public void check(it.bz.tis.sasabus.html5.shared.ui.menu.MenuMoreClickHandler  ret){
            // moreMenuItem
            if (ret.moreMenuItem != null)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.menu.MenuMoreClickHandler.moreMenuItem");
            // moreOpen
            if (ret.moreOpen != false)
               throw new RuntimeException("The constructor initialized the field it.bz.tis.sasabus.html5.shared.ui.menu.MenuMoreClickHandler.moreOpen");
         }
      });
      this.putInstanceFactory("it.bz.tis.sasabus.html5.shared.ui.menu.MenuMoreClickHandler", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.bz.tis.sasabus.html5.shared.ui.menu.MenuMoreClickHandler ret = new it.bz.tis.sasabus.html5.shared.ui.menu.MenuMoreClickHandler();
            emptyObjectCheck.get("it.bz.tis.sasabus.html5.shared.ui.menu.MenuMoreClickHandler").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.bz.tis.sasabus.html5.shared.ui.menu.MenuMoreClickHandler", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            // moreMenuItem
            if ((value = structure.property("moreMenuItem")) != null)
               if (value.isNull())
                  ((MenuMoreClickHandler)obj).moreMenuItem = null;
               else
               {
                  String refid = value.structure().getRefId();    
                  if (refid != null)                              
                     ((MenuMoreClickHandler)obj).moreMenuItem = (bz.davide.dmweb.shared.view.DivView)identities.get(refid);
                  else {
                     Object o = newInstance(value.structure().getRuntimeClassName("DivView"));              
                     internalUnmarschall(value.structure(), o.getClass().getName(), o, identities); 
                     ((MenuMoreClickHandler)obj).moreMenuItem = (bz.davide.dmweb.shared.view.DivView)o;
                  }
               }
            // moreOpen
            if ((value = structure.property("moreOpen")) != null)
               if (value.isNull())
                  new RuntimeException("Impossibile value for primitive type");
               else
               {
                  ((MenuMoreClickHandler)obj).moreOpen = value.booleanValue();
               }
            structure.close();
         }
      });

   }
}
